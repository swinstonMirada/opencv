INFO:root:class: ['class Imgproc', '', [], []]
INFO:root:ok: ClassInfo [base='' ; classname='' ; classpath='' ; cname='Imgproc' ; consts='[<__main__.ConstInfo object at 0x1059b0590>, <__main__.ConstInfo object at 0x1059b05d0>, <__main__.ConstInfo object at 0x1059b0610>]' ; imports='set([])' ; jname='Imgproc' ; methods='{}' ; methods_suffixes='{}' ; name='Imgproc' ; namespace='' ; private_consts='[<__main__.ConstInfo object at 0x1059b0410>, <__main__.ConstInfo object at 0x1059b0450>, <__main__.ConstInfo object at 0x1059b0490>, <__main__.ConstInfo object at 0x1059b04d0>, <__main__.ConstInfo object at 0x1059b0510>, <__main__.ConstInfo object at 0x1059b0550>]' ; props='[]']
INFO:root:=== Header: /Users/swinston/Mirada/lib/c/opencv/modules/imgproc/include/opencv2/imgproc/imgproc_c.h
INFO:root:=== Namespaces: set([''])
INFO:root:=== Header: /Users/swinston/Mirada/lib/c/opencv/modules/imgproc/include/opencv2/imgproc/types_c.h
INFO:root:=== Namespaces: set([''])
INFO:root:constant: ['const CV_BLUR_NO_SCALE', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_BLUR_NO_SCALE' ; name='CV_BLUR_NO_SCALE' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_BLUR', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_BLUR' ; name='CV_BLUR' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_GAUSSIAN', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_GAUSSIAN' ; name='CV_GAUSSIAN' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_MEDIAN', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_MEDIAN' ; name='CV_MEDIAN' ; namespace='' ; value='3']
INFO:root:constant: ['const CV_BILATERAL', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_BILATERAL' ; name='CV_BILATERAL' ; namespace='' ; value='4']
INFO:root:constant: ['const CV_GAUSSIAN_5x5', '7', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_GAUSSIAN_5x5' ; name='CV_GAUSSIAN_5x5' ; namespace='' ; value='7']
INFO:root:constant: ['const CV_SCHARR', '-1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_SCHARR' ; name='CV_SCHARR' ; namespace='' ; value='-1']
INFO:root:constant: ['const CV_MAX_SOBEL_KSIZE', '7', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_MAX_SOBEL_KSIZE' ; name='CV_MAX_SOBEL_KSIZE' ; namespace='' ; value='7']
INFO:root:constant: ['const CV_BGR2BGRA', '0', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2BGRA' ; name='CV_BGR2BGRA' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_RGB2RGBA', 'CV_BGR2BGRA', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2RGBA' ; name='CV_RGB2RGBA' ; namespace='' ; value='CV_BGR2BGRA']
INFO:root:constant: ['const CV_BGRA2BGR', '1', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGRA2BGR' ; name='CV_BGRA2BGR' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_RGBA2RGB', 'CV_BGRA2BGR', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGBA2RGB' ; name='CV_RGBA2RGB' ; namespace='' ; value='CV_BGRA2BGR']
INFO:root:constant: ['const CV_BGR2RGBA', '2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2RGBA' ; name='CV_BGR2RGBA' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_RGB2BGRA', 'CV_BGR2RGBA', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2BGRA' ; name='CV_RGB2BGRA' ; namespace='' ; value='CV_BGR2RGBA']
INFO:root:constant: ['const CV_RGBA2BGR', '3', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGBA2BGR' ; name='CV_RGBA2BGR' ; namespace='' ; value='3']
INFO:root:constant: ['const CV_BGRA2RGB', 'CV_RGBA2BGR', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGRA2RGB' ; name='CV_BGRA2RGB' ; namespace='' ; value='CV_RGBA2BGR']
INFO:root:constant: ['const CV_BGR2RGB', '4', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2RGB' ; name='CV_BGR2RGB' ; namespace='' ; value='4']
INFO:root:constant: ['const CV_RGB2BGR', 'CV_BGR2RGB', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2BGR' ; name='CV_RGB2BGR' ; namespace='' ; value='CV_BGR2RGB']
INFO:root:constant: ['const CV_BGRA2RGBA', '5', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGRA2RGBA' ; name='CV_BGRA2RGBA' ; namespace='' ; value='5']
INFO:root:constant: ['const CV_RGBA2BGRA', 'CV_BGRA2RGBA', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGBA2BGRA' ; name='CV_RGBA2BGRA' ; namespace='' ; value='CV_BGRA2RGBA']
INFO:root:constant: ['const CV_BGR2GRAY', '6', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2GRAY' ; name='CV_BGR2GRAY' ; namespace='' ; value='6']
INFO:root:constant: ['const CV_RGB2GRAY', '7', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2GRAY' ; name='CV_RGB2GRAY' ; namespace='' ; value='7']
INFO:root:constant: ['const CV_GRAY2BGR', '8', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_GRAY2BGR' ; name='CV_GRAY2BGR' ; namespace='' ; value='8']
INFO:root:constant: ['const CV_GRAY2RGB', 'CV_GRAY2BGR', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_GRAY2RGB' ; name='CV_GRAY2RGB' ; namespace='' ; value='CV_GRAY2BGR']
INFO:root:constant: ['const CV_GRAY2BGRA', '9', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_GRAY2BGRA' ; name='CV_GRAY2BGRA' ; namespace='' ; value='9']
INFO:root:constant: ['const CV_GRAY2RGBA', 'CV_GRAY2BGRA', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_GRAY2RGBA' ; name='CV_GRAY2RGBA' ; namespace='' ; value='CV_GRAY2BGRA']
INFO:root:constant: ['const CV_BGRA2GRAY', '10', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGRA2GRAY' ; name='CV_BGRA2GRAY' ; namespace='' ; value='10']
INFO:root:constant: ['const CV_RGBA2GRAY', '11', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGBA2GRAY' ; name='CV_RGBA2GRAY' ; namespace='' ; value='11']
INFO:root:constant: ['const CV_BGR2BGR565', '12', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2BGR565' ; name='CV_BGR2BGR565' ; namespace='' ; value='12']
INFO:root:constant: ['const CV_RGB2BGR565', '13', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2BGR565' ; name='CV_RGB2BGR565' ; namespace='' ; value='13']
INFO:root:constant: ['const CV_BGR5652BGR', '14', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR5652BGR' ; name='CV_BGR5652BGR' ; namespace='' ; value='14']
INFO:root:constant: ['const CV_BGR5652RGB', '15', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR5652RGB' ; name='CV_BGR5652RGB' ; namespace='' ; value='15']
INFO:root:constant: ['const CV_BGRA2BGR565', '16', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGRA2BGR565' ; name='CV_BGRA2BGR565' ; namespace='' ; value='16']
INFO:root:constant: ['const CV_RGBA2BGR565', '17', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGBA2BGR565' ; name='CV_RGBA2BGR565' ; namespace='' ; value='17']
INFO:root:constant: ['const CV_BGR5652BGRA', '18', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR5652BGRA' ; name='CV_BGR5652BGRA' ; namespace='' ; value='18']
INFO:root:constant: ['const CV_BGR5652RGBA', '19', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR5652RGBA' ; name='CV_BGR5652RGBA' ; namespace='' ; value='19']
INFO:root:constant: ['const CV_GRAY2BGR565', '20', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_GRAY2BGR565' ; name='CV_GRAY2BGR565' ; namespace='' ; value='20']
INFO:root:constant: ['const CV_BGR5652GRAY', '21', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR5652GRAY' ; name='CV_BGR5652GRAY' ; namespace='' ; value='21']
INFO:root:constant: ['const CV_BGR2BGR555', '22', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2BGR555' ; name='CV_BGR2BGR555' ; namespace='' ; value='22']
INFO:root:constant: ['const CV_RGB2BGR555', '23', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2BGR555' ; name='CV_RGB2BGR555' ; namespace='' ; value='23']
INFO:root:constant: ['const CV_BGR5552BGR', '24', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR5552BGR' ; name='CV_BGR5552BGR' ; namespace='' ; value='24']
INFO:root:constant: ['const CV_BGR5552RGB', '25', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR5552RGB' ; name='CV_BGR5552RGB' ; namespace='' ; value='25']
INFO:root:constant: ['const CV_BGRA2BGR555', '26', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGRA2BGR555' ; name='CV_BGRA2BGR555' ; namespace='' ; value='26']
INFO:root:constant: ['const CV_RGBA2BGR555', '27', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGBA2BGR555' ; name='CV_RGBA2BGR555' ; namespace='' ; value='27']
INFO:root:constant: ['const CV_BGR5552BGRA', '28', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR5552BGRA' ; name='CV_BGR5552BGRA' ; namespace='' ; value='28']
INFO:root:constant: ['const CV_BGR5552RGBA', '29', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR5552RGBA' ; name='CV_BGR5552RGBA' ; namespace='' ; value='29']
INFO:root:constant: ['const CV_GRAY2BGR555', '30', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_GRAY2BGR555' ; name='CV_GRAY2BGR555' ; namespace='' ; value='30']
INFO:root:constant: ['const CV_BGR5552GRAY', '31', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR5552GRAY' ; name='CV_BGR5552GRAY' ; namespace='' ; value='31']
INFO:root:constant: ['const CV_BGR2XYZ', '32', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2XYZ' ; name='CV_BGR2XYZ' ; namespace='' ; value='32']
INFO:root:constant: ['const CV_RGB2XYZ', '33', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2XYZ' ; name='CV_RGB2XYZ' ; namespace='' ; value='33']
INFO:root:constant: ['const CV_XYZ2BGR', '34', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_XYZ2BGR' ; name='CV_XYZ2BGR' ; namespace='' ; value='34']
INFO:root:constant: ['const CV_XYZ2RGB', '35', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_XYZ2RGB' ; name='CV_XYZ2RGB' ; namespace='' ; value='35']
INFO:root:constant: ['const CV_BGR2YCrCb', '36', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2YCrCb' ; name='CV_BGR2YCrCb' ; namespace='' ; value='36']
INFO:root:constant: ['const CV_RGB2YCrCb', '37', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2YCrCb' ; name='CV_RGB2YCrCb' ; namespace='' ; value='37']
INFO:root:constant: ['const CV_YCrCb2BGR', '38', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YCrCb2BGR' ; name='CV_YCrCb2BGR' ; namespace='' ; value='38']
INFO:root:constant: ['const CV_YCrCb2RGB', '39', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YCrCb2RGB' ; name='CV_YCrCb2RGB' ; namespace='' ; value='39']
INFO:root:constant: ['const CV_BGR2HSV', '40', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2HSV' ; name='CV_BGR2HSV' ; namespace='' ; value='40']
INFO:root:constant: ['const CV_RGB2HSV', '41', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2HSV' ; name='CV_RGB2HSV' ; namespace='' ; value='41']
INFO:root:constant: ['const CV_BGR2Lab', '44', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2Lab' ; name='CV_BGR2Lab' ; namespace='' ; value='44']
INFO:root:constant: ['const CV_RGB2Lab', '45', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2Lab' ; name='CV_RGB2Lab' ; namespace='' ; value='45']
INFO:root:constant: ['const CV_BayerBG2BGR', '46', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerBG2BGR' ; name='CV_BayerBG2BGR' ; namespace='' ; value='46']
INFO:root:constant: ['const CV_BayerGB2BGR', '47', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGB2BGR' ; name='CV_BayerGB2BGR' ; namespace='' ; value='47']
INFO:root:constant: ['const CV_BayerRG2BGR', '48', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerRG2BGR' ; name='CV_BayerRG2BGR' ; namespace='' ; value='48']
INFO:root:constant: ['const CV_BayerGR2BGR', '49', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGR2BGR' ; name='CV_BayerGR2BGR' ; namespace='' ; value='49']
INFO:root:constant: ['const CV_BayerBG2RGB', 'CV_BayerRG2BGR', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerBG2RGB' ; name='CV_BayerBG2RGB' ; namespace='' ; value='CV_BayerRG2BGR']
INFO:root:constant: ['const CV_BayerGB2RGB', 'CV_BayerGR2BGR', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGB2RGB' ; name='CV_BayerGB2RGB' ; namespace='' ; value='CV_BayerGR2BGR']
INFO:root:constant: ['const CV_BayerRG2RGB', 'CV_BayerBG2BGR', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerRG2RGB' ; name='CV_BayerRG2RGB' ; namespace='' ; value='CV_BayerBG2BGR']
INFO:root:constant: ['const CV_BayerGR2RGB', 'CV_BayerGB2BGR', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGR2RGB' ; name='CV_BayerGR2RGB' ; namespace='' ; value='CV_BayerGB2BGR']
INFO:root:constant: ['const CV_BGR2Luv', '50', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2Luv' ; name='CV_BGR2Luv' ; namespace='' ; value='50']
INFO:root:constant: ['const CV_RGB2Luv', '51', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2Luv' ; name='CV_RGB2Luv' ; namespace='' ; value='51']
INFO:root:constant: ['const CV_BGR2HLS', '52', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2HLS' ; name='CV_BGR2HLS' ; namespace='' ; value='52']
INFO:root:constant: ['const CV_RGB2HLS', '53', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2HLS' ; name='CV_RGB2HLS' ; namespace='' ; value='53']
INFO:root:constant: ['const CV_HSV2BGR', '54', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_HSV2BGR' ; name='CV_HSV2BGR' ; namespace='' ; value='54']
INFO:root:constant: ['const CV_HSV2RGB', '55', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_HSV2RGB' ; name='CV_HSV2RGB' ; namespace='' ; value='55']
INFO:root:constant: ['const CV_Lab2BGR', '56', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_Lab2BGR' ; name='CV_Lab2BGR' ; namespace='' ; value='56']
INFO:root:constant: ['const CV_Lab2RGB', '57', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_Lab2RGB' ; name='CV_Lab2RGB' ; namespace='' ; value='57']
INFO:root:constant: ['const CV_Luv2BGR', '58', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_Luv2BGR' ; name='CV_Luv2BGR' ; namespace='' ; value='58']
INFO:root:constant: ['const CV_Luv2RGB', '59', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_Luv2RGB' ; name='CV_Luv2RGB' ; namespace='' ; value='59']
INFO:root:constant: ['const CV_HLS2BGR', '60', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_HLS2BGR' ; name='CV_HLS2BGR' ; namespace='' ; value='60']
INFO:root:constant: ['const CV_HLS2RGB', '61', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_HLS2RGB' ; name='CV_HLS2RGB' ; namespace='' ; value='61']
INFO:root:constant: ['const CV_BayerBG2BGR_VNG', '62', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerBG2BGR_VNG' ; name='CV_BayerBG2BGR_VNG' ; namespace='' ; value='62']
INFO:root:constant: ['const CV_BayerGB2BGR_VNG', '63', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGB2BGR_VNG' ; name='CV_BayerGB2BGR_VNG' ; namespace='' ; value='63']
INFO:root:constant: ['const CV_BayerRG2BGR_VNG', '64', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerRG2BGR_VNG' ; name='CV_BayerRG2BGR_VNG' ; namespace='' ; value='64']
INFO:root:constant: ['const CV_BayerGR2BGR_VNG', '65', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGR2BGR_VNG' ; name='CV_BayerGR2BGR_VNG' ; namespace='' ; value='65']
INFO:root:constant: ['const CV_BayerBG2RGB_VNG', 'CV_BayerRG2BGR_VNG', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerBG2RGB_VNG' ; name='CV_BayerBG2RGB_VNG' ; namespace='' ; value='CV_BayerRG2BGR_VNG']
INFO:root:constant: ['const CV_BayerGB2RGB_VNG', 'CV_BayerGR2BGR_VNG', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGB2RGB_VNG' ; name='CV_BayerGB2RGB_VNG' ; namespace='' ; value='CV_BayerGR2BGR_VNG']
INFO:root:constant: ['const CV_BayerRG2RGB_VNG', 'CV_BayerBG2BGR_VNG', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerRG2RGB_VNG' ; name='CV_BayerRG2RGB_VNG' ; namespace='' ; value='CV_BayerBG2BGR_VNG']
INFO:root:constant: ['const CV_BayerGR2RGB_VNG', 'CV_BayerGB2BGR_VNG', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGR2RGB_VNG' ; name='CV_BayerGR2RGB_VNG' ; namespace='' ; value='CV_BayerGB2BGR_VNG']
INFO:root:constant: ['const CV_BGR2HSV_FULL', '66', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2HSV_FULL' ; name='CV_BGR2HSV_FULL' ; namespace='' ; value='66']
INFO:root:constant: ['const CV_RGB2HSV_FULL', '67', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2HSV_FULL' ; name='CV_RGB2HSV_FULL' ; namespace='' ; value='67']
INFO:root:constant: ['const CV_BGR2HLS_FULL', '68', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2HLS_FULL' ; name='CV_BGR2HLS_FULL' ; namespace='' ; value='68']
INFO:root:constant: ['const CV_RGB2HLS_FULL', '69', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2HLS_FULL' ; name='CV_RGB2HLS_FULL' ; namespace='' ; value='69']
INFO:root:constant: ['const CV_HSV2BGR_FULL', '70', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_HSV2BGR_FULL' ; name='CV_HSV2BGR_FULL' ; namespace='' ; value='70']
INFO:root:constant: ['const CV_HSV2RGB_FULL', '71', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_HSV2RGB_FULL' ; name='CV_HSV2RGB_FULL' ; namespace='' ; value='71']
INFO:root:constant: ['const CV_HLS2BGR_FULL', '72', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_HLS2BGR_FULL' ; name='CV_HLS2BGR_FULL' ; namespace='' ; value='72']
INFO:root:constant: ['const CV_HLS2RGB_FULL', '73', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_HLS2RGB_FULL' ; name='CV_HLS2RGB_FULL' ; namespace='' ; value='73']
INFO:root:constant: ['const CV_LBGR2Lab', '74', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_LBGR2Lab' ; name='CV_LBGR2Lab' ; namespace='' ; value='74']
INFO:root:constant: ['const CV_LRGB2Lab', '75', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_LRGB2Lab' ; name='CV_LRGB2Lab' ; namespace='' ; value='75']
INFO:root:constant: ['const CV_LBGR2Luv', '76', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_LBGR2Luv' ; name='CV_LBGR2Luv' ; namespace='' ; value='76']
INFO:root:constant: ['const CV_LRGB2Luv', '77', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_LRGB2Luv' ; name='CV_LRGB2Luv' ; namespace='' ; value='77']
INFO:root:constant: ['const CV_Lab2LBGR', '78', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_Lab2LBGR' ; name='CV_Lab2LBGR' ; namespace='' ; value='78']
INFO:root:constant: ['const CV_Lab2LRGB', '79', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_Lab2LRGB' ; name='CV_Lab2LRGB' ; namespace='' ; value='79']
INFO:root:constant: ['const CV_Luv2LBGR', '80', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_Luv2LBGR' ; name='CV_Luv2LBGR' ; namespace='' ; value='80']
INFO:root:constant: ['const CV_Luv2LRGB', '81', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_Luv2LRGB' ; name='CV_Luv2LRGB' ; namespace='' ; value='81']
INFO:root:constant: ['const CV_BGR2YUV', '82', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2YUV' ; name='CV_BGR2YUV' ; namespace='' ; value='82']
INFO:root:constant: ['const CV_RGB2YUV', '83', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2YUV' ; name='CV_RGB2YUV' ; namespace='' ; value='83']
INFO:root:constant: ['const CV_YUV2BGR', '84', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR' ; name='CV_YUV2BGR' ; namespace='' ; value='84']
INFO:root:constant: ['const CV_YUV2RGB', '85', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB' ; name='CV_YUV2RGB' ; namespace='' ; value='85']
INFO:root:constant: ['const CV_BayerBG2GRAY', '86', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerBG2GRAY' ; name='CV_BayerBG2GRAY' ; namespace='' ; value='86']
INFO:root:constant: ['const CV_BayerGB2GRAY', '87', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGB2GRAY' ; name='CV_BayerGB2GRAY' ; namespace='' ; value='87']
INFO:root:constant: ['const CV_BayerRG2GRAY', '88', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerRG2GRAY' ; name='CV_BayerRG2GRAY' ; namespace='' ; value='88']
INFO:root:constant: ['const CV_BayerGR2GRAY', '89', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGR2GRAY' ; name='CV_BayerGR2GRAY' ; namespace='' ; value='89']
INFO:root:constant: ['const CV_YUV2RGB_NV12', '90', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB_NV12' ; name='CV_YUV2RGB_NV12' ; namespace='' ; value='90']
INFO:root:constant: ['const CV_YUV2BGR_NV12', '91', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR_NV12' ; name='CV_YUV2BGR_NV12' ; namespace='' ; value='91']
INFO:root:constant: ['const CV_YUV2RGB_NV21', '92', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB_NV21' ; name='CV_YUV2RGB_NV21' ; namespace='' ; value='92']
INFO:root:constant: ['const CV_YUV2BGR_NV21', '93', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR_NV21' ; name='CV_YUV2BGR_NV21' ; namespace='' ; value='93']
INFO:root:constant: ['const CV_YUV420sp2RGB', 'CV_YUV2RGB_NV21', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV420sp2RGB' ; name='CV_YUV420sp2RGB' ; namespace='' ; value='CV_YUV2RGB_NV21']
INFO:root:constant: ['const CV_YUV420sp2BGR', 'CV_YUV2BGR_NV21', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV420sp2BGR' ; name='CV_YUV420sp2BGR' ; namespace='' ; value='CV_YUV2BGR_NV21']
INFO:root:constant: ['const CV_YUV2RGBA_NV12', '94', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGBA_NV12' ; name='CV_YUV2RGBA_NV12' ; namespace='' ; value='94']
INFO:root:constant: ['const CV_YUV2BGRA_NV12', '95', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGRA_NV12' ; name='CV_YUV2BGRA_NV12' ; namespace='' ; value='95']
INFO:root:constant: ['const CV_YUV2RGBA_NV21', '96', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGBA_NV21' ; name='CV_YUV2RGBA_NV21' ; namespace='' ; value='96']
INFO:root:constant: ['const CV_YUV2BGRA_NV21', '97', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGRA_NV21' ; name='CV_YUV2BGRA_NV21' ; namespace='' ; value='97']
INFO:root:constant: ['const CV_YUV420sp2RGBA', 'CV_YUV2RGBA_NV21', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV420sp2RGBA' ; name='CV_YUV420sp2RGBA' ; namespace='' ; value='CV_YUV2RGBA_NV21']
INFO:root:constant: ['const CV_YUV420sp2BGRA', 'CV_YUV2BGRA_NV21', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV420sp2BGRA' ; name='CV_YUV420sp2BGRA' ; namespace='' ; value='CV_YUV2BGRA_NV21']
INFO:root:constant: ['const CV_YUV2RGB_YV12', '98', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB_YV12' ; name='CV_YUV2RGB_YV12' ; namespace='' ; value='98']
INFO:root:constant: ['const CV_YUV2BGR_YV12', '99', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR_YV12' ; name='CV_YUV2BGR_YV12' ; namespace='' ; value='99']
INFO:root:constant: ['const CV_YUV2RGB_IYUV', '100', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB_IYUV' ; name='CV_YUV2RGB_IYUV' ; namespace='' ; value='100']
INFO:root:constant: ['const CV_YUV2BGR_IYUV', '101', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR_IYUV' ; name='CV_YUV2BGR_IYUV' ; namespace='' ; value='101']
INFO:root:constant: ['const CV_YUV2RGB_I420', 'CV_YUV2RGB_IYUV', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB_I420' ; name='CV_YUV2RGB_I420' ; namespace='' ; value='CV_YUV2RGB_IYUV']
INFO:root:constant: ['const CV_YUV2BGR_I420', 'CV_YUV2BGR_IYUV', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR_I420' ; name='CV_YUV2BGR_I420' ; namespace='' ; value='CV_YUV2BGR_IYUV']
INFO:root:constant: ['const CV_YUV420p2RGB', 'CV_YUV2RGB_YV12', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV420p2RGB' ; name='CV_YUV420p2RGB' ; namespace='' ; value='CV_YUV2RGB_YV12']
INFO:root:constant: ['const CV_YUV420p2BGR', 'CV_YUV2BGR_YV12', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV420p2BGR' ; name='CV_YUV420p2BGR' ; namespace='' ; value='CV_YUV2BGR_YV12']
INFO:root:constant: ['const CV_YUV2RGBA_YV12', '102', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGBA_YV12' ; name='CV_YUV2RGBA_YV12' ; namespace='' ; value='102']
INFO:root:constant: ['const CV_YUV2BGRA_YV12', '103', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGRA_YV12' ; name='CV_YUV2BGRA_YV12' ; namespace='' ; value='103']
INFO:root:constant: ['const CV_YUV2RGBA_IYUV', '104', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGBA_IYUV' ; name='CV_YUV2RGBA_IYUV' ; namespace='' ; value='104']
INFO:root:constant: ['const CV_YUV2BGRA_IYUV', '105', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGRA_IYUV' ; name='CV_YUV2BGRA_IYUV' ; namespace='' ; value='105']
INFO:root:constant: ['const CV_YUV2RGBA_I420', 'CV_YUV2RGBA_IYUV', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGBA_I420' ; name='CV_YUV2RGBA_I420' ; namespace='' ; value='CV_YUV2RGBA_IYUV']
INFO:root:constant: ['const CV_YUV2BGRA_I420', 'CV_YUV2BGRA_IYUV', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGRA_I420' ; name='CV_YUV2BGRA_I420' ; namespace='' ; value='CV_YUV2BGRA_IYUV']
INFO:root:constant: ['const CV_YUV420p2RGBA', 'CV_YUV2RGBA_YV12', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV420p2RGBA' ; name='CV_YUV420p2RGBA' ; namespace='' ; value='CV_YUV2RGBA_YV12']
INFO:root:constant: ['const CV_YUV420p2BGRA', 'CV_YUV2BGRA_YV12', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV420p2BGRA' ; name='CV_YUV420p2BGRA' ; namespace='' ; value='CV_YUV2BGRA_YV12']
INFO:root:constant: ['const CV_YUV2GRAY_420', '106', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_420' ; name='CV_YUV2GRAY_420' ; namespace='' ; value='106']
INFO:root:constant: ['const CV_YUV2GRAY_NV21', 'CV_YUV2GRAY_420', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_NV21' ; name='CV_YUV2GRAY_NV21' ; namespace='' ; value='CV_YUV2GRAY_420']
INFO:root:constant: ['const CV_YUV2GRAY_NV12', 'CV_YUV2GRAY_420', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_NV12' ; name='CV_YUV2GRAY_NV12' ; namespace='' ; value='CV_YUV2GRAY_420']
INFO:root:constant: ['const CV_YUV2GRAY_YV12', 'CV_YUV2GRAY_420', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_YV12' ; name='CV_YUV2GRAY_YV12' ; namespace='' ; value='CV_YUV2GRAY_420']
INFO:root:constant: ['const CV_YUV2GRAY_IYUV', 'CV_YUV2GRAY_420', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_IYUV' ; name='CV_YUV2GRAY_IYUV' ; namespace='' ; value='CV_YUV2GRAY_420']
INFO:root:constant: ['const CV_YUV2GRAY_I420', 'CV_YUV2GRAY_420', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_I420' ; name='CV_YUV2GRAY_I420' ; namespace='' ; value='CV_YUV2GRAY_420']
INFO:root:constant: ['const CV_YUV420sp2GRAY', 'CV_YUV2GRAY_420', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV420sp2GRAY' ; name='CV_YUV420sp2GRAY' ; namespace='' ; value='CV_YUV2GRAY_420']
INFO:root:constant: ['const CV_YUV420p2GRAY', 'CV_YUV2GRAY_420', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV420p2GRAY' ; name='CV_YUV420p2GRAY' ; namespace='' ; value='CV_YUV2GRAY_420']
INFO:root:constant: ['const CV_YUV2RGB_UYVY', '107', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB_UYVY' ; name='CV_YUV2RGB_UYVY' ; namespace='' ; value='107']
INFO:root:constant: ['const CV_YUV2BGR_UYVY', '108', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR_UYVY' ; name='CV_YUV2BGR_UYVY' ; namespace='' ; value='108']
INFO:root:constant: ['const CV_YUV2RGB_Y422', 'CV_YUV2RGB_UYVY', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB_Y422' ; name='CV_YUV2RGB_Y422' ; namespace='' ; value='CV_YUV2RGB_UYVY']
INFO:root:constant: ['const CV_YUV2BGR_Y422', 'CV_YUV2BGR_UYVY', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR_Y422' ; name='CV_YUV2BGR_Y422' ; namespace='' ; value='CV_YUV2BGR_UYVY']
INFO:root:constant: ['const CV_YUV2RGB_UYNV', 'CV_YUV2RGB_UYVY', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB_UYNV' ; name='CV_YUV2RGB_UYNV' ; namespace='' ; value='CV_YUV2RGB_UYVY']
INFO:root:constant: ['const CV_YUV2BGR_UYNV', 'CV_YUV2BGR_UYVY', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR_UYNV' ; name='CV_YUV2BGR_UYNV' ; namespace='' ; value='CV_YUV2BGR_UYVY']
INFO:root:constant: ['const CV_YUV2RGBA_UYVY', '111', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGBA_UYVY' ; name='CV_YUV2RGBA_UYVY' ; namespace='' ; value='111']
INFO:root:constant: ['const CV_YUV2BGRA_UYVY', '112', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGRA_UYVY' ; name='CV_YUV2BGRA_UYVY' ; namespace='' ; value='112']
INFO:root:constant: ['const CV_YUV2RGBA_Y422', 'CV_YUV2RGBA_UYVY', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGBA_Y422' ; name='CV_YUV2RGBA_Y422' ; namespace='' ; value='CV_YUV2RGBA_UYVY']
INFO:root:constant: ['const CV_YUV2BGRA_Y422', 'CV_YUV2BGRA_UYVY', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGRA_Y422' ; name='CV_YUV2BGRA_Y422' ; namespace='' ; value='CV_YUV2BGRA_UYVY']
INFO:root:constant: ['const CV_YUV2RGBA_UYNV', 'CV_YUV2RGBA_UYVY', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGBA_UYNV' ; name='CV_YUV2RGBA_UYNV' ; namespace='' ; value='CV_YUV2RGBA_UYVY']
INFO:root:constant: ['const CV_YUV2BGRA_UYNV', 'CV_YUV2BGRA_UYVY', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGRA_UYNV' ; name='CV_YUV2BGRA_UYNV' ; namespace='' ; value='CV_YUV2BGRA_UYVY']
INFO:root:constant: ['const CV_YUV2RGB_YUY2', '115', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB_YUY2' ; name='CV_YUV2RGB_YUY2' ; namespace='' ; value='115']
INFO:root:constant: ['const CV_YUV2BGR_YUY2', '116', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR_YUY2' ; name='CV_YUV2BGR_YUY2' ; namespace='' ; value='116']
INFO:root:constant: ['const CV_YUV2RGB_YVYU', '117', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB_YVYU' ; name='CV_YUV2RGB_YVYU' ; namespace='' ; value='117']
INFO:root:constant: ['const CV_YUV2BGR_YVYU', '118', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR_YVYU' ; name='CV_YUV2BGR_YVYU' ; namespace='' ; value='118']
INFO:root:constant: ['const CV_YUV2RGB_YUYV', 'CV_YUV2RGB_YUY2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB_YUYV' ; name='CV_YUV2RGB_YUYV' ; namespace='' ; value='CV_YUV2RGB_YUY2']
INFO:root:constant: ['const CV_YUV2BGR_YUYV', 'CV_YUV2BGR_YUY2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR_YUYV' ; name='CV_YUV2BGR_YUYV' ; namespace='' ; value='CV_YUV2BGR_YUY2']
INFO:root:constant: ['const CV_YUV2RGB_YUNV', 'CV_YUV2RGB_YUY2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGB_YUNV' ; name='CV_YUV2RGB_YUNV' ; namespace='' ; value='CV_YUV2RGB_YUY2']
INFO:root:constant: ['const CV_YUV2BGR_YUNV', 'CV_YUV2BGR_YUY2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGR_YUNV' ; name='CV_YUV2BGR_YUNV' ; namespace='' ; value='CV_YUV2BGR_YUY2']
INFO:root:constant: ['const CV_YUV2RGBA_YUY2', '119', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGBA_YUY2' ; name='CV_YUV2RGBA_YUY2' ; namespace='' ; value='119']
INFO:root:constant: ['const CV_YUV2BGRA_YUY2', '120', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGRA_YUY2' ; name='CV_YUV2BGRA_YUY2' ; namespace='' ; value='120']
INFO:root:constant: ['const CV_YUV2RGBA_YVYU', '121', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGBA_YVYU' ; name='CV_YUV2RGBA_YVYU' ; namespace='' ; value='121']
INFO:root:constant: ['const CV_YUV2BGRA_YVYU', '122', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGRA_YVYU' ; name='CV_YUV2BGRA_YVYU' ; namespace='' ; value='122']
INFO:root:constant: ['const CV_YUV2RGBA_YUYV', 'CV_YUV2RGBA_YUY2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGBA_YUYV' ; name='CV_YUV2RGBA_YUYV' ; namespace='' ; value='CV_YUV2RGBA_YUY2']
INFO:root:constant: ['const CV_YUV2BGRA_YUYV', 'CV_YUV2BGRA_YUY2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGRA_YUYV' ; name='CV_YUV2BGRA_YUYV' ; namespace='' ; value='CV_YUV2BGRA_YUY2']
INFO:root:constant: ['const CV_YUV2RGBA_YUNV', 'CV_YUV2RGBA_YUY2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2RGBA_YUNV' ; name='CV_YUV2RGBA_YUNV' ; namespace='' ; value='CV_YUV2RGBA_YUY2']
INFO:root:constant: ['const CV_YUV2BGRA_YUNV', 'CV_YUV2BGRA_YUY2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2BGRA_YUNV' ; name='CV_YUV2BGRA_YUNV' ; namespace='' ; value='CV_YUV2BGRA_YUY2']
INFO:root:constant: ['const CV_YUV2GRAY_UYVY', '123', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_UYVY' ; name='CV_YUV2GRAY_UYVY' ; namespace='' ; value='123']
INFO:root:constant: ['const CV_YUV2GRAY_YUY2', '124', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_YUY2' ; name='CV_YUV2GRAY_YUY2' ; namespace='' ; value='124']
INFO:root:constant: ['const CV_YUV2GRAY_Y422', 'CV_YUV2GRAY_UYVY', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_Y422' ; name='CV_YUV2GRAY_Y422' ; namespace='' ; value='CV_YUV2GRAY_UYVY']
INFO:root:constant: ['const CV_YUV2GRAY_UYNV', 'CV_YUV2GRAY_UYVY', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_UYNV' ; name='CV_YUV2GRAY_UYNV' ; namespace='' ; value='CV_YUV2GRAY_UYVY']
INFO:root:constant: ['const CV_YUV2GRAY_YVYU', 'CV_YUV2GRAY_YUY2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_YVYU' ; name='CV_YUV2GRAY_YVYU' ; namespace='' ; value='CV_YUV2GRAY_YUY2']
INFO:root:constant: ['const CV_YUV2GRAY_YUYV', 'CV_YUV2GRAY_YUY2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_YUYV' ; name='CV_YUV2GRAY_YUYV' ; namespace='' ; value='CV_YUV2GRAY_YUY2']
INFO:root:constant: ['const CV_YUV2GRAY_YUNV', 'CV_YUV2GRAY_YUY2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_YUV2GRAY_YUNV' ; name='CV_YUV2GRAY_YUNV' ; namespace='' ; value='CV_YUV2GRAY_YUY2']
INFO:root:constant: ['const CV_RGBA2mRGBA', '125', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_RGBA2mRGBA' ; name='CV_RGBA2mRGBA' ; namespace='' ; value='125']
INFO:root:constant: ['const CV_mRGBA2RGBA', '126', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_mRGBA2RGBA' ; name='CV_mRGBA2RGBA' ; namespace='' ; value='126']
INFO:root:constant: ['const CV_RGB2YUV_I420', '127', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2YUV_I420' ; name='CV_RGB2YUV_I420' ; namespace='' ; value='127']
INFO:root:constant: ['const CV_BGR2YUV_I420', '128', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2YUV_I420' ; name='CV_BGR2YUV_I420' ; namespace='' ; value='128']
INFO:root:constant: ['const CV_RGB2YUV_IYUV', 'CV_RGB2YUV_I420', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2YUV_IYUV' ; name='CV_RGB2YUV_IYUV' ; namespace='' ; value='CV_RGB2YUV_I420']
INFO:root:constant: ['const CV_BGR2YUV_IYUV', 'CV_BGR2YUV_I420', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2YUV_IYUV' ; name='CV_BGR2YUV_IYUV' ; namespace='' ; value='CV_BGR2YUV_I420']
INFO:root:constant: ['const CV_RGBA2YUV_I420', '129', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGBA2YUV_I420' ; name='CV_RGBA2YUV_I420' ; namespace='' ; value='129']
INFO:root:constant: ['const CV_BGRA2YUV_I420', '130', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGRA2YUV_I420' ; name='CV_BGRA2YUV_I420' ; namespace='' ; value='130']
INFO:root:constant: ['const CV_RGBA2YUV_IYUV', 'CV_RGBA2YUV_I420', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGBA2YUV_IYUV' ; name='CV_RGBA2YUV_IYUV' ; namespace='' ; value='CV_RGBA2YUV_I420']
INFO:root:constant: ['const CV_BGRA2YUV_IYUV', 'CV_BGRA2YUV_I420', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGRA2YUV_IYUV' ; name='CV_BGRA2YUV_IYUV' ; namespace='' ; value='CV_BGRA2YUV_I420']
INFO:root:constant: ['const CV_RGB2YUV_YV12', '131', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGB2YUV_YV12' ; name='CV_RGB2YUV_YV12' ; namespace='' ; value='131']
INFO:root:constant: ['const CV_BGR2YUV_YV12', '132', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGR2YUV_YV12' ; name='CV_BGR2YUV_YV12' ; namespace='' ; value='132']
INFO:root:constant: ['const CV_RGBA2YUV_YV12', '133', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_RGBA2YUV_YV12' ; name='CV_RGBA2YUV_YV12' ; namespace='' ; value='133']
INFO:root:constant: ['const CV_BGRA2YUV_YV12', '134', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BGRA2YUV_YV12' ; name='CV_BGRA2YUV_YV12' ; namespace='' ; value='134']
INFO:root:constant: ['const CV_BayerBG2BGR_EA', '135', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerBG2BGR_EA' ; name='CV_BayerBG2BGR_EA' ; namespace='' ; value='135']
INFO:root:constant: ['const CV_BayerGB2BGR_EA', '136', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGB2BGR_EA' ; name='CV_BayerGB2BGR_EA' ; namespace='' ; value='136']
INFO:root:constant: ['const CV_BayerRG2BGR_EA', '137', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerRG2BGR_EA' ; name='CV_BayerRG2BGR_EA' ; namespace='' ; value='137']
INFO:root:constant: ['const CV_BayerGR2BGR_EA', '138', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGR2BGR_EA' ; name='CV_BayerGR2BGR_EA' ; namespace='' ; value='138']
INFO:root:constant: ['const CV_BayerBG2RGB_EA', 'CV_BayerRG2BGR_EA', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerBG2RGB_EA' ; name='CV_BayerBG2RGB_EA' ; namespace='' ; value='CV_BayerRG2BGR_EA']
INFO:root:constant: ['const CV_BayerGB2RGB_EA', 'CV_BayerGR2BGR_EA', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGB2RGB_EA' ; name='CV_BayerGB2RGB_EA' ; namespace='' ; value='CV_BayerGR2BGR_EA']
INFO:root:constant: ['const CV_BayerRG2RGB_EA', 'CV_BayerBG2BGR_EA', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerRG2RGB_EA' ; name='CV_BayerRG2RGB_EA' ; namespace='' ; value='CV_BayerBG2BGR_EA']
INFO:root:constant: ['const CV_BayerGR2RGB_EA', 'CV_BayerGB2BGR_EA', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_BayerGR2RGB_EA' ; name='CV_BayerGR2RGB_EA' ; namespace='' ; value='CV_BayerGB2BGR_EA']
INFO:root:constant: ['const CV_COLORCVT_MAX', '139', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_COLORCVT_MAX' ; name='CV_COLORCVT_MAX' ; namespace='' ; value='139']
INFO:root:constant: ['const CV_INTER_NN', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_INTER_NN' ; name='CV_INTER_NN' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_INTER_LINEAR', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_INTER_LINEAR' ; name='CV_INTER_LINEAR' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_INTER_CUBIC', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_INTER_CUBIC' ; name='CV_INTER_CUBIC' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_INTER_AREA', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_INTER_AREA' ; name='CV_INTER_AREA' ; namespace='' ; value='3']
INFO:root:constant: ['const CV_INTER_LANCZOS4', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_INTER_LANCZOS4' ; name='CV_INTER_LANCZOS4' ; namespace='' ; value='4']
INFO:root:constant: ['const CV_WARP_FILL_OUTLIERS', '8', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_WARP_FILL_OUTLIERS' ; name='CV_WARP_FILL_OUTLIERS' ; namespace='' ; value='8']
INFO:root:constant: ['const CV_WARP_INVERSE_MAP', '16', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_WARP_INVERSE_MAP' ; name='CV_WARP_INVERSE_MAP' ; namespace='' ; value='16']
INFO:root:constant: ['const CV_SHAPE_RECT', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_SHAPE_RECT' ; name='CV_SHAPE_RECT' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_SHAPE_CROSS', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_SHAPE_CROSS' ; name='CV_SHAPE_CROSS' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_SHAPE_ELLIPSE', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_SHAPE_ELLIPSE' ; name='CV_SHAPE_ELLIPSE' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_SHAPE_CUSTOM', '100', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_SHAPE_CUSTOM' ; name='CV_SHAPE_CUSTOM' ; namespace='' ; value='100']
INFO:root:constant: ['const CV_MOP_ERODE', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_MOP_ERODE' ; name='CV_MOP_ERODE' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_MOP_DILATE', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_MOP_DILATE' ; name='CV_MOP_DILATE' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_MOP_OPEN', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_MOP_OPEN' ; name='CV_MOP_OPEN' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_MOP_CLOSE', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_MOP_CLOSE' ; name='CV_MOP_CLOSE' ; namespace='' ; value='3']
INFO:root:constant: ['const CV_MOP_GRADIENT', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_MOP_GRADIENT' ; name='CV_MOP_GRADIENT' ; namespace='' ; value='4']
INFO:root:constant: ['const CV_MOP_TOPHAT', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_MOP_TOPHAT' ; name='CV_MOP_TOPHAT' ; namespace='' ; value='5']
INFO:root:constant: ['const CV_MOP_BLACKHAT', '6', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_MOP_BLACKHAT' ; name='CV_MOP_BLACKHAT' ; namespace='' ; value='6']
INFO:root:constant: ['const CV_TM_SQDIFF', '0', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_TM_SQDIFF' ; name='CV_TM_SQDIFF' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_TM_SQDIFF_NORMED', '1', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_TM_SQDIFF_NORMED' ; name='CV_TM_SQDIFF_NORMED' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_TM_CCORR', '2', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_TM_CCORR' ; name='CV_TM_CCORR' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_TM_CCORR_NORMED', '3', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_TM_CCORR_NORMED' ; name='CV_TM_CCORR_NORMED' ; namespace='' ; value='3']
INFO:root:constant: ['const CV_TM_CCOEFF', '4', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_TM_CCOEFF' ; name='CV_TM_CCOEFF' ; namespace='' ; value='4']
INFO:root:constant: ['const CV_TM_CCOEFF_NORMED', '5', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_TM_CCOEFF_NORMED' ; name='CV_TM_CCOEFF_NORMED' ; namespace='' ; value='5']
INFO:root:constant: ['const CV_RETR_EXTERNAL', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_RETR_EXTERNAL' ; name='CV_RETR_EXTERNAL' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_RETR_LIST', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_RETR_LIST' ; name='CV_RETR_LIST' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_RETR_CCOMP', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_RETR_CCOMP' ; name='CV_RETR_CCOMP' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_RETR_TREE', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_RETR_TREE' ; name='CV_RETR_TREE' ; namespace='' ; value='3']
INFO:root:constant: ['const CV_RETR_FLOODFILL', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_RETR_FLOODFILL' ; name='CV_RETR_FLOODFILL' ; namespace='' ; value='4']
INFO:root:constant: ['const CV_CHAIN_CODE', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_CHAIN_CODE' ; name='CV_CHAIN_CODE' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_CHAIN_APPROX_NONE', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_CHAIN_APPROX_NONE' ; name='CV_CHAIN_APPROX_NONE' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_CHAIN_APPROX_SIMPLE', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_CHAIN_APPROX_SIMPLE' ; name='CV_CHAIN_APPROX_SIMPLE' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_CHAIN_APPROX_TC89_L1', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_CHAIN_APPROX_TC89_L1' ; name='CV_CHAIN_APPROX_TC89_L1' ; namespace='' ; value='3']
INFO:root:constant: ['const CV_CHAIN_APPROX_TC89_KCOS', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_CHAIN_APPROX_TC89_KCOS' ; name='CV_CHAIN_APPROX_TC89_KCOS' ; namespace='' ; value='4']
INFO:root:constant: ['const CV_LINK_RUNS', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_LINK_RUNS' ; name='CV_LINK_RUNS' ; namespace='' ; value='5']
INFO:root:constant: ['const CV_POLY_APPROX_DP', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_POLY_APPROX_DP' ; name='CV_POLY_APPROX_DP' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_CONTOURS_MATCH_I1', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_CONTOURS_MATCH_I1' ; name='CV_CONTOURS_MATCH_I1' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_CONTOURS_MATCH_I2', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_CONTOURS_MATCH_I2' ; name='CV_CONTOURS_MATCH_I2' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_CONTOURS_MATCH_I3', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_CONTOURS_MATCH_I3' ; name='CV_CONTOURS_MATCH_I3' ; namespace='' ; value='3']
INFO:root:constant: ['const CV_CLOCKWISE', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_CLOCKWISE' ; name='CV_CLOCKWISE' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_COUNTER_CLOCKWISE', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_COUNTER_CLOCKWISE' ; name='CV_COUNTER_CLOCKWISE' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_COMP_CORREL', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_COMP_CORREL' ; name='CV_COMP_CORREL' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_COMP_CHISQR', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_COMP_CHISQR' ; name='CV_COMP_CHISQR' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_COMP_INTERSECT', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_COMP_INTERSECT' ; name='CV_COMP_INTERSECT' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_COMP_BHATTACHARYYA', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_COMP_BHATTACHARYYA' ; name='CV_COMP_BHATTACHARYYA' ; namespace='' ; value='3']
INFO:root:constant: ['const CV_COMP_HELLINGER', 'CV_COMP_BHATTACHARYYA', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_COMP_HELLINGER' ; name='CV_COMP_HELLINGER' ; namespace='' ; value='CV_COMP_BHATTACHARYYA']
INFO:root:constant: ['const CV_COMP_CHISQR_ALT', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_COMP_CHISQR_ALT' ; name='CV_COMP_CHISQR_ALT' ; namespace='' ; value='4']
INFO:root:constant: ['const CV_COMP_KL_DIV', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_COMP_KL_DIV' ; name='CV_COMP_KL_DIV' ; namespace='' ; value='5']
INFO:root:constant: ['const CV_DIST_MASK_3', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_MASK_3' ; name='CV_DIST_MASK_3' ; namespace='' ; value='3']
INFO:root:constant: ['const CV_DIST_MASK_5', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_MASK_5' ; name='CV_DIST_MASK_5' ; namespace='' ; value='5']
INFO:root:constant: ['const CV_DIST_MASK_PRECISE', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_MASK_PRECISE' ; name='CV_DIST_MASK_PRECISE' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_DIST_LABEL_CCOMP', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_LABEL_CCOMP' ; name='CV_DIST_LABEL_CCOMP' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_DIST_LABEL_PIXEL', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_LABEL_PIXEL' ; name='CV_DIST_LABEL_PIXEL' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_DIST_USER', '-1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_USER' ; name='CV_DIST_USER' ; namespace='' ; value='-1']
INFO:root:constant: ['const CV_DIST_L1', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_L1' ; name='CV_DIST_L1' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_DIST_L2', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_L2' ; name='CV_DIST_L2' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_DIST_C', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_C' ; name='CV_DIST_C' ; namespace='' ; value='3']
INFO:root:constant: ['const CV_DIST_L12', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_L12' ; name='CV_DIST_L12' ; namespace='' ; value='4']
INFO:root:constant: ['const CV_DIST_FAIR', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_FAIR' ; name='CV_DIST_FAIR' ; namespace='' ; value='5']
INFO:root:constant: ['const CV_DIST_WELSCH', '6', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_WELSCH' ; name='CV_DIST_WELSCH' ; namespace='' ; value='6']
INFO:root:constant: ['const CV_DIST_HUBER', '7', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_DIST_HUBER' ; name='CV_DIST_HUBER' ; namespace='' ; value='7']
INFO:root:constant: ['const CV_THRESH_BINARY', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_THRESH_BINARY' ; name='CV_THRESH_BINARY' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_THRESH_BINARY_INV', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_THRESH_BINARY_INV' ; name='CV_THRESH_BINARY_INV' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_THRESH_TRUNC', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_THRESH_TRUNC' ; name='CV_THRESH_TRUNC' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_THRESH_TOZERO', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_THRESH_TOZERO' ; name='CV_THRESH_TOZERO' ; namespace='' ; value='3']
INFO:root:constant: ['const CV_THRESH_TOZERO_INV', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_THRESH_TOZERO_INV' ; name='CV_THRESH_TOZERO_INV' ; namespace='' ; value='4']
INFO:root:constant: ['const CV_THRESH_MASK', '7', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_THRESH_MASK' ; name='CV_THRESH_MASK' ; namespace='' ; value='7']
INFO:root:constant: ['const CV_THRESH_OTSU', '8', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_THRESH_OTSU' ; name='CV_THRESH_OTSU' ; namespace='' ; value='8']
INFO:root:constant: ['const CV_ADAPTIVE_THRESH_MEAN_C', '0', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_ADAPTIVE_THRESH_MEAN_C' ; name='CV_ADAPTIVE_THRESH_MEAN_C' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_ADAPTIVE_THRESH_GAUSSIAN_C', '1', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_ADAPTIVE_THRESH_GAUSSIAN_C' ; name='CV_ADAPTIVE_THRESH_GAUSSIAN_C' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_FLOODFILL_FIXED_RANGE', '(1 << 16)', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_FLOODFILL_FIXED_RANGE' ; name='CV_FLOODFILL_FIXED_RANGE' ; namespace='' ; value='(1 << 16)']
INFO:root:constant: ['const CV_FLOODFILL_MASK_ONLY', '(1 << 17)', [], []]
INFO:root:ignored: ConstInfo [addedManually='False' ; classname='' ; classpath='' ; cname='CV_FLOODFILL_MASK_ONLY' ; name='CV_FLOODFILL_MASK_ONLY' ; namespace='' ; value='(1 << 17)']
INFO:root:constant: ['const CV_CANNY_L2_GRADIENT', '(1 << 31)', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_CANNY_L2_GRADIENT' ; name='CV_CANNY_L2_GRADIENT' ; namespace='' ; value='(1 << 31)']
INFO:root:constant: ['const CV_HOUGH_STANDARD', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_HOUGH_STANDARD' ; name='CV_HOUGH_STANDARD' ; namespace='' ; value='0']
INFO:root:constant: ['const CV_HOUGH_PROBABILISTIC', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_HOUGH_PROBABILISTIC' ; name='CV_HOUGH_PROBABILISTIC' ; namespace='' ; value='1']
INFO:root:constant: ['const CV_HOUGH_MULTI_SCALE', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_HOUGH_MULTI_SCALE' ; name='CV_HOUGH_MULTI_SCALE' ; namespace='' ; value='2']
INFO:root:constant: ['const CV_HOUGH_GRADIENT', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CV_HOUGH_GRADIENT' ; name='CV_HOUGH_GRADIENT' ; namespace='' ; value='3']
INFO:root:=== Header: /Users/swinston/Mirada/lib/c/opencv/modules/imgproc/include/opencv2/imgproc.hpp
INFO:root:=== Namespaces: set(['', 'cv'])
INFO:root:constant: ['const cv.MORPH_ERODE', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='MORPH_ERODE' ; name='MORPH_ERODE' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.MORPH_DILATE', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='MORPH_DILATE' ; name='MORPH_DILATE' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.MORPH_OPEN', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='MORPH_OPEN' ; name='MORPH_OPEN' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.MORPH_CLOSE', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='MORPH_CLOSE' ; name='MORPH_CLOSE' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.MORPH_GRADIENT', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='MORPH_GRADIENT' ; name='MORPH_GRADIENT' ; namespace='cv' ; value='4']
INFO:root:constant: ['const cv.MORPH_TOPHAT', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='MORPH_TOPHAT' ; name='MORPH_TOPHAT' ; namespace='cv' ; value='5']
INFO:root:constant: ['const cv.MORPH_BLACKHAT', '6', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='MORPH_BLACKHAT' ; name='MORPH_BLACKHAT' ; namespace='cv' ; value='6']
INFO:root:constant: ['const cv.MORPH_RECT', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='MORPH_RECT' ; name='MORPH_RECT' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.MORPH_CROSS', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='MORPH_CROSS' ; name='MORPH_CROSS' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.MORPH_ELLIPSE', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='MORPH_ELLIPSE' ; name='MORPH_ELLIPSE' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.INTER_NEAREST', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTER_NEAREST' ; name='INTER_NEAREST' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.INTER_LINEAR', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTER_LINEAR' ; name='INTER_LINEAR' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.INTER_CUBIC', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTER_CUBIC' ; name='INTER_CUBIC' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.INTER_AREA', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTER_AREA' ; name='INTER_AREA' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.INTER_LANCZOS4', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTER_LANCZOS4' ; name='INTER_LANCZOS4' ; namespace='cv' ; value='4']
INFO:root:constant: ['const cv.INTER_MAX', '7', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTER_MAX' ; name='INTER_MAX' ; namespace='cv' ; value='7']
INFO:root:constant: ['const cv.WARP_FILL_OUTLIERS', '8', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='WARP_FILL_OUTLIERS' ; name='WARP_FILL_OUTLIERS' ; namespace='cv' ; value='8']
INFO:root:constant: ['const cv.WARP_INVERSE_MAP', '16', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='WARP_INVERSE_MAP' ; name='WARP_INVERSE_MAP' ; namespace='cv' ; value='16']
INFO:root:constant: ['const cv.INTER_BITS', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTER_BITS' ; name='INTER_BITS' ; namespace='cv' ; value='5']
INFO:root:constant: ['const cv.INTER_BITS2', 'INTER_BITS * 2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTER_BITS2' ; name='INTER_BITS2' ; namespace='cv' ; value='INTER_BITS * 2']
INFO:root:constant: ['const cv.INTER_TAB_SIZE', '1 << INTER_BITS', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTER_TAB_SIZE' ; name='INTER_TAB_SIZE' ; namespace='cv' ; value='1 << INTER_BITS']
INFO:root:constant: ['const cv.INTER_TAB_SIZE2', 'INTER_TAB_SIZE * INTER_TAB_SIZE', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTER_TAB_SIZE2' ; name='INTER_TAB_SIZE2' ; namespace='cv' ; value='INTER_TAB_SIZE * INTER_TAB_SIZE']
INFO:root:constant: ['const cv.DIST_USER', '-1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_USER' ; name='DIST_USER' ; namespace='cv' ; value='-1']
INFO:root:constant: ['const cv.DIST_L1', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_L1' ; name='DIST_L1' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.DIST_L2', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_L2' ; name='DIST_L2' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.DIST_C', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_C' ; name='DIST_C' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.DIST_L12', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_L12' ; name='DIST_L12' ; namespace='cv' ; value='4']
INFO:root:constant: ['const cv.DIST_FAIR', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_FAIR' ; name='DIST_FAIR' ; namespace='cv' ; value='5']
INFO:root:constant: ['const cv.DIST_WELSCH', '6', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_WELSCH' ; name='DIST_WELSCH' ; namespace='cv' ; value='6']
INFO:root:constant: ['const cv.DIST_HUBER', '7', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_HUBER' ; name='DIST_HUBER' ; namespace='cv' ; value='7']
INFO:root:constant: ['const cv.DIST_MASK_3', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_MASK_3' ; name='DIST_MASK_3' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.DIST_MASK_5', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_MASK_5' ; name='DIST_MASK_5' ; namespace='cv' ; value='5']
INFO:root:constant: ['const cv.DIST_MASK_PRECISE', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_MASK_PRECISE' ; name='DIST_MASK_PRECISE' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.THRESH_BINARY', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='THRESH_BINARY' ; name='THRESH_BINARY' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.THRESH_BINARY_INV', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='THRESH_BINARY_INV' ; name='THRESH_BINARY_INV' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.THRESH_TRUNC', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='THRESH_TRUNC' ; name='THRESH_TRUNC' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.THRESH_TOZERO', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='THRESH_TOZERO' ; name='THRESH_TOZERO' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.THRESH_TOZERO_INV', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='THRESH_TOZERO_INV' ; name='THRESH_TOZERO_INV' ; namespace='cv' ; value='4']
INFO:root:constant: ['const cv.THRESH_MASK', '7', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='THRESH_MASK' ; name='THRESH_MASK' ; namespace='cv' ; value='7']
INFO:root:constant: ['const cv.THRESH_OTSU', '8', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='THRESH_OTSU' ; name='THRESH_OTSU' ; namespace='cv' ; value='8']
INFO:root:constant: ['const cv.ADAPTIVE_THRESH_MEAN_C', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='ADAPTIVE_THRESH_MEAN_C' ; name='ADAPTIVE_THRESH_MEAN_C' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.ADAPTIVE_THRESH_GAUSSIAN_C', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='ADAPTIVE_THRESH_GAUSSIAN_C' ; name='ADAPTIVE_THRESH_GAUSSIAN_C' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.PROJ_SPHERICAL_ORTHO', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='PROJ_SPHERICAL_ORTHO' ; name='PROJ_SPHERICAL_ORTHO' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.PROJ_SPHERICAL_EQRECT', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='PROJ_SPHERICAL_EQRECT' ; name='PROJ_SPHERICAL_EQRECT' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.GC_BGD', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='GC_BGD' ; name='GC_BGD' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.GC_FGD', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='GC_FGD' ; name='GC_FGD' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.GC_PR_BGD', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='GC_PR_BGD' ; name='GC_PR_BGD' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.GC_PR_FGD', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='GC_PR_FGD' ; name='GC_PR_FGD' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.GC_INIT_WITH_RECT', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='GC_INIT_WITH_RECT' ; name='GC_INIT_WITH_RECT' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.GC_INIT_WITH_MASK', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='GC_INIT_WITH_MASK' ; name='GC_INIT_WITH_MASK' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.GC_EVAL', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='GC_EVAL' ; name='GC_EVAL' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.DIST_LABEL_CCOMP', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_LABEL_CCOMP' ; name='DIST_LABEL_CCOMP' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.DIST_LABEL_PIXEL', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='DIST_LABEL_PIXEL' ; name='DIST_LABEL_PIXEL' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.FLOODFILL_FIXED_RANGE', '1 << 16', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='FLOODFILL_FIXED_RANGE' ; name='FLOODFILL_FIXED_RANGE' ; namespace='cv' ; value='1 << 16']
INFO:root:constant: ['const cv.FLOODFILL_MASK_ONLY', '1 << 17', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='FLOODFILL_MASK_ONLY' ; name='FLOODFILL_MASK_ONLY' ; namespace='cv' ; value='1 << 17']
INFO:root:constant: ['const cv.TM_SQDIFF', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='TM_SQDIFF' ; name='TM_SQDIFF' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.TM_SQDIFF_NORMED', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='TM_SQDIFF_NORMED' ; name='TM_SQDIFF_NORMED' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.TM_CCORR', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='TM_CCORR' ; name='TM_CCORR' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.TM_CCORR_NORMED', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='TM_CCORR_NORMED' ; name='TM_CCORR_NORMED' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.TM_CCOEFF', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='TM_CCOEFF' ; name='TM_CCOEFF' ; namespace='cv' ; value='4']
INFO:root:constant: ['const cv.TM_CCOEFF_NORMED', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='TM_CCOEFF_NORMED' ; name='TM_CCOEFF_NORMED' ; namespace='cv' ; value='5']
INFO:root:constant: ['const cv.CC_STAT_LEFT', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CC_STAT_LEFT' ; name='CC_STAT_LEFT' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.CC_STAT_TOP', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CC_STAT_TOP' ; name='CC_STAT_TOP' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.CC_STAT_WIDTH', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CC_STAT_WIDTH' ; name='CC_STAT_WIDTH' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.CC_STAT_HEIGHT', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CC_STAT_HEIGHT' ; name='CC_STAT_HEIGHT' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.CC_STAT_AREA', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CC_STAT_AREA' ; name='CC_STAT_AREA' ; namespace='cv' ; value='4']
INFO:root:constant: ['const cv.CC_STAT_MAX', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CC_STAT_MAX' ; name='CC_STAT_MAX' ; namespace='cv' ; value='5']
INFO:root:constant: ['const cv.RETR_EXTERNAL', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='RETR_EXTERNAL' ; name='RETR_EXTERNAL' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.RETR_LIST', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='RETR_LIST' ; name='RETR_LIST' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.RETR_CCOMP', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='RETR_CCOMP' ; name='RETR_CCOMP' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.RETR_TREE', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='RETR_TREE' ; name='RETR_TREE' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.RETR_FLOODFILL', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='RETR_FLOODFILL' ; name='RETR_FLOODFILL' ; namespace='cv' ; value='4']
INFO:root:constant: ['const cv.CHAIN_APPROX_NONE', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CHAIN_APPROX_NONE' ; name='CHAIN_APPROX_NONE' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.CHAIN_APPROX_SIMPLE', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CHAIN_APPROX_SIMPLE' ; name='CHAIN_APPROX_SIMPLE' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.CHAIN_APPROX_TC89_L1', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CHAIN_APPROX_TC89_L1' ; name='CHAIN_APPROX_TC89_L1' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.CHAIN_APPROX_TC89_KCOS', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='CHAIN_APPROX_TC89_KCOS' ; name='CHAIN_APPROX_TC89_KCOS' ; namespace='cv' ; value='4']
INFO:root:constant: ['const cv.HOUGH_STANDARD', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='HOUGH_STANDARD' ; name='HOUGH_STANDARD' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.HOUGH_PROBABILISTIC', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='HOUGH_PROBABILISTIC' ; name='HOUGH_PROBABILISTIC' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.HOUGH_MULTI_SCALE', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='HOUGH_MULTI_SCALE' ; name='HOUGH_MULTI_SCALE' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.HOUGH_GRADIENT', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='HOUGH_GRADIENT' ; name='HOUGH_GRADIENT' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.LSD_REFINE_NONE', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='LSD_REFINE_NONE' ; name='LSD_REFINE_NONE' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.LSD_REFINE_STD', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='LSD_REFINE_STD' ; name='LSD_REFINE_STD' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.LSD_REFINE_ADV', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='LSD_REFINE_ADV' ; name='LSD_REFINE_ADV' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.HISTCMP_CORREL', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='HISTCMP_CORREL' ; name='HISTCMP_CORREL' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.HISTCMP_CHISQR', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='HISTCMP_CHISQR' ; name='HISTCMP_CHISQR' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.HISTCMP_INTERSECT', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='HISTCMP_INTERSECT' ; name='HISTCMP_INTERSECT' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.HISTCMP_BHATTACHARYYA', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='HISTCMP_BHATTACHARYYA' ; name='HISTCMP_BHATTACHARYYA' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.HISTCMP_HELLINGER', 'HISTCMP_BHATTACHARYYA', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='HISTCMP_HELLINGER' ; name='HISTCMP_HELLINGER' ; namespace='cv' ; value='HISTCMP_BHATTACHARYYA']
INFO:root:constant: ['const cv.HISTCMP_CHISQR_ALT', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='HISTCMP_CHISQR_ALT' ; name='HISTCMP_CHISQR_ALT' ; namespace='cv' ; value='4']
INFO:root:constant: ['const cv.HISTCMP_KL_DIV', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='HISTCMP_KL_DIV' ; name='HISTCMP_KL_DIV' ; namespace='cv' ; value='5']
INFO:root:constant: ['const cv.COLOR_BGR2BGRA', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2BGRA' ; name='COLOR_BGR2BGRA' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.COLOR_RGB2RGBA', 'COLOR_BGR2BGRA', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2RGBA' ; name='COLOR_RGB2RGBA' ; namespace='cv' ; value='COLOR_BGR2BGRA']
INFO:root:constant: ['const cv.COLOR_BGRA2BGR', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGRA2BGR' ; name='COLOR_BGRA2BGR' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.COLOR_RGBA2RGB', 'COLOR_BGRA2BGR', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGBA2RGB' ; name='COLOR_RGBA2RGB' ; namespace='cv' ; value='COLOR_BGRA2BGR']
INFO:root:constant: ['const cv.COLOR_BGR2RGBA', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2RGBA' ; name='COLOR_BGR2RGBA' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.COLOR_RGB2BGRA', 'COLOR_BGR2RGBA', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2BGRA' ; name='COLOR_RGB2BGRA' ; namespace='cv' ; value='COLOR_BGR2RGBA']
INFO:root:constant: ['const cv.COLOR_RGBA2BGR', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGBA2BGR' ; name='COLOR_RGBA2BGR' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.COLOR_BGRA2RGB', 'COLOR_RGBA2BGR', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGRA2RGB' ; name='COLOR_BGRA2RGB' ; namespace='cv' ; value='COLOR_RGBA2BGR']
INFO:root:constant: ['const cv.COLOR_BGR2RGB', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2RGB' ; name='COLOR_BGR2RGB' ; namespace='cv' ; value='4']
INFO:root:constant: ['const cv.COLOR_RGB2BGR', 'COLOR_BGR2RGB', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2BGR' ; name='COLOR_RGB2BGR' ; namespace='cv' ; value='COLOR_BGR2RGB']
INFO:root:constant: ['const cv.COLOR_BGRA2RGBA', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGRA2RGBA' ; name='COLOR_BGRA2RGBA' ; namespace='cv' ; value='5']
INFO:root:constant: ['const cv.COLOR_RGBA2BGRA', 'COLOR_BGRA2RGBA', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGBA2BGRA' ; name='COLOR_RGBA2BGRA' ; namespace='cv' ; value='COLOR_BGRA2RGBA']
INFO:root:constant: ['const cv.COLOR_BGR2GRAY', '6', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2GRAY' ; name='COLOR_BGR2GRAY' ; namespace='cv' ; value='6']
INFO:root:constant: ['const cv.COLOR_RGB2GRAY', '7', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2GRAY' ; name='COLOR_RGB2GRAY' ; namespace='cv' ; value='7']
INFO:root:constant: ['const cv.COLOR_GRAY2BGR', '8', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_GRAY2BGR' ; name='COLOR_GRAY2BGR' ; namespace='cv' ; value='8']
INFO:root:constant: ['const cv.COLOR_GRAY2RGB', 'COLOR_GRAY2BGR', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_GRAY2RGB' ; name='COLOR_GRAY2RGB' ; namespace='cv' ; value='COLOR_GRAY2BGR']
INFO:root:constant: ['const cv.COLOR_GRAY2BGRA', '9', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_GRAY2BGRA' ; name='COLOR_GRAY2BGRA' ; namespace='cv' ; value='9']
INFO:root:constant: ['const cv.COLOR_GRAY2RGBA', 'COLOR_GRAY2BGRA', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_GRAY2RGBA' ; name='COLOR_GRAY2RGBA' ; namespace='cv' ; value='COLOR_GRAY2BGRA']
INFO:root:constant: ['const cv.COLOR_BGRA2GRAY', '10', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGRA2GRAY' ; name='COLOR_BGRA2GRAY' ; namespace='cv' ; value='10']
INFO:root:constant: ['const cv.COLOR_RGBA2GRAY', '11', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGBA2GRAY' ; name='COLOR_RGBA2GRAY' ; namespace='cv' ; value='11']
INFO:root:constant: ['const cv.COLOR_BGR2BGR565', '12', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2BGR565' ; name='COLOR_BGR2BGR565' ; namespace='cv' ; value='12']
INFO:root:constant: ['const cv.COLOR_RGB2BGR565', '13', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2BGR565' ; name='COLOR_RGB2BGR565' ; namespace='cv' ; value='13']
INFO:root:constant: ['const cv.COLOR_BGR5652BGR', '14', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR5652BGR' ; name='COLOR_BGR5652BGR' ; namespace='cv' ; value='14']
INFO:root:constant: ['const cv.COLOR_BGR5652RGB', '15', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR5652RGB' ; name='COLOR_BGR5652RGB' ; namespace='cv' ; value='15']
INFO:root:constant: ['const cv.COLOR_BGRA2BGR565', '16', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGRA2BGR565' ; name='COLOR_BGRA2BGR565' ; namespace='cv' ; value='16']
INFO:root:constant: ['const cv.COLOR_RGBA2BGR565', '17', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGBA2BGR565' ; name='COLOR_RGBA2BGR565' ; namespace='cv' ; value='17']
INFO:root:constant: ['const cv.COLOR_BGR5652BGRA', '18', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR5652BGRA' ; name='COLOR_BGR5652BGRA' ; namespace='cv' ; value='18']
INFO:root:constant: ['const cv.COLOR_BGR5652RGBA', '19', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR5652RGBA' ; name='COLOR_BGR5652RGBA' ; namespace='cv' ; value='19']
INFO:root:constant: ['const cv.COLOR_GRAY2BGR565', '20', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_GRAY2BGR565' ; name='COLOR_GRAY2BGR565' ; namespace='cv' ; value='20']
INFO:root:constant: ['const cv.COLOR_BGR5652GRAY', '21', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR5652GRAY' ; name='COLOR_BGR5652GRAY' ; namespace='cv' ; value='21']
INFO:root:constant: ['const cv.COLOR_BGR2BGR555', '22', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2BGR555' ; name='COLOR_BGR2BGR555' ; namespace='cv' ; value='22']
INFO:root:constant: ['const cv.COLOR_RGB2BGR555', '23', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2BGR555' ; name='COLOR_RGB2BGR555' ; namespace='cv' ; value='23']
INFO:root:constant: ['const cv.COLOR_BGR5552BGR', '24', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR5552BGR' ; name='COLOR_BGR5552BGR' ; namespace='cv' ; value='24']
INFO:root:constant: ['const cv.COLOR_BGR5552RGB', '25', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR5552RGB' ; name='COLOR_BGR5552RGB' ; namespace='cv' ; value='25']
INFO:root:constant: ['const cv.COLOR_BGRA2BGR555', '26', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGRA2BGR555' ; name='COLOR_BGRA2BGR555' ; namespace='cv' ; value='26']
INFO:root:constant: ['const cv.COLOR_RGBA2BGR555', '27', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGBA2BGR555' ; name='COLOR_RGBA2BGR555' ; namespace='cv' ; value='27']
INFO:root:constant: ['const cv.COLOR_BGR5552BGRA', '28', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR5552BGRA' ; name='COLOR_BGR5552BGRA' ; namespace='cv' ; value='28']
INFO:root:constant: ['const cv.COLOR_BGR5552RGBA', '29', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR5552RGBA' ; name='COLOR_BGR5552RGBA' ; namespace='cv' ; value='29']
INFO:root:constant: ['const cv.COLOR_GRAY2BGR555', '30', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_GRAY2BGR555' ; name='COLOR_GRAY2BGR555' ; namespace='cv' ; value='30']
INFO:root:constant: ['const cv.COLOR_BGR5552GRAY', '31', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR5552GRAY' ; name='COLOR_BGR5552GRAY' ; namespace='cv' ; value='31']
INFO:root:constant: ['const cv.COLOR_BGR2XYZ', '32', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2XYZ' ; name='COLOR_BGR2XYZ' ; namespace='cv' ; value='32']
INFO:root:constant: ['const cv.COLOR_RGB2XYZ', '33', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2XYZ' ; name='COLOR_RGB2XYZ' ; namespace='cv' ; value='33']
INFO:root:constant: ['const cv.COLOR_XYZ2BGR', '34', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_XYZ2BGR' ; name='COLOR_XYZ2BGR' ; namespace='cv' ; value='34']
INFO:root:constant: ['const cv.COLOR_XYZ2RGB', '35', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_XYZ2RGB' ; name='COLOR_XYZ2RGB' ; namespace='cv' ; value='35']
INFO:root:constant: ['const cv.COLOR_BGR2YCrCb', '36', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2YCrCb' ; name='COLOR_BGR2YCrCb' ; namespace='cv' ; value='36']
INFO:root:constant: ['const cv.COLOR_RGB2YCrCb', '37', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2YCrCb' ; name='COLOR_RGB2YCrCb' ; namespace='cv' ; value='37']
INFO:root:constant: ['const cv.COLOR_YCrCb2BGR', '38', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YCrCb2BGR' ; name='COLOR_YCrCb2BGR' ; namespace='cv' ; value='38']
INFO:root:constant: ['const cv.COLOR_YCrCb2RGB', '39', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YCrCb2RGB' ; name='COLOR_YCrCb2RGB' ; namespace='cv' ; value='39']
INFO:root:constant: ['const cv.COLOR_BGR2HSV', '40', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2HSV' ; name='COLOR_BGR2HSV' ; namespace='cv' ; value='40']
INFO:root:constant: ['const cv.COLOR_RGB2HSV', '41', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2HSV' ; name='COLOR_RGB2HSV' ; namespace='cv' ; value='41']
INFO:root:constant: ['const cv.COLOR_BGR2Lab', '44', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2Lab' ; name='COLOR_BGR2Lab' ; namespace='cv' ; value='44']
INFO:root:constant: ['const cv.COLOR_RGB2Lab', '45', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2Lab' ; name='COLOR_RGB2Lab' ; namespace='cv' ; value='45']
INFO:root:constant: ['const cv.COLOR_BGR2Luv', '50', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2Luv' ; name='COLOR_BGR2Luv' ; namespace='cv' ; value='50']
INFO:root:constant: ['const cv.COLOR_RGB2Luv', '51', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2Luv' ; name='COLOR_RGB2Luv' ; namespace='cv' ; value='51']
INFO:root:constant: ['const cv.COLOR_BGR2HLS', '52', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2HLS' ; name='COLOR_BGR2HLS' ; namespace='cv' ; value='52']
INFO:root:constant: ['const cv.COLOR_RGB2HLS', '53', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2HLS' ; name='COLOR_RGB2HLS' ; namespace='cv' ; value='53']
INFO:root:constant: ['const cv.COLOR_HSV2BGR', '54', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_HSV2BGR' ; name='COLOR_HSV2BGR' ; namespace='cv' ; value='54']
INFO:root:constant: ['const cv.COLOR_HSV2RGB', '55', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_HSV2RGB' ; name='COLOR_HSV2RGB' ; namespace='cv' ; value='55']
INFO:root:constant: ['const cv.COLOR_Lab2BGR', '56', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_Lab2BGR' ; name='COLOR_Lab2BGR' ; namespace='cv' ; value='56']
INFO:root:constant: ['const cv.COLOR_Lab2RGB', '57', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_Lab2RGB' ; name='COLOR_Lab2RGB' ; namespace='cv' ; value='57']
INFO:root:constant: ['const cv.COLOR_Luv2BGR', '58', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_Luv2BGR' ; name='COLOR_Luv2BGR' ; namespace='cv' ; value='58']
INFO:root:constant: ['const cv.COLOR_Luv2RGB', '59', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_Luv2RGB' ; name='COLOR_Luv2RGB' ; namespace='cv' ; value='59']
INFO:root:constant: ['const cv.COLOR_HLS2BGR', '60', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_HLS2BGR' ; name='COLOR_HLS2BGR' ; namespace='cv' ; value='60']
INFO:root:constant: ['const cv.COLOR_HLS2RGB', '61', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_HLS2RGB' ; name='COLOR_HLS2RGB' ; namespace='cv' ; value='61']
INFO:root:constant: ['const cv.COLOR_BGR2HSV_FULL', '66', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2HSV_FULL' ; name='COLOR_BGR2HSV_FULL' ; namespace='cv' ; value='66']
INFO:root:constant: ['const cv.COLOR_RGB2HSV_FULL', '67', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2HSV_FULL' ; name='COLOR_RGB2HSV_FULL' ; namespace='cv' ; value='67']
INFO:root:constant: ['const cv.COLOR_BGR2HLS_FULL', '68', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2HLS_FULL' ; name='COLOR_BGR2HLS_FULL' ; namespace='cv' ; value='68']
INFO:root:constant: ['const cv.COLOR_RGB2HLS_FULL', '69', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2HLS_FULL' ; name='COLOR_RGB2HLS_FULL' ; namespace='cv' ; value='69']
INFO:root:constant: ['const cv.COLOR_HSV2BGR_FULL', '70', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_HSV2BGR_FULL' ; name='COLOR_HSV2BGR_FULL' ; namespace='cv' ; value='70']
INFO:root:constant: ['const cv.COLOR_HSV2RGB_FULL', '71', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_HSV2RGB_FULL' ; name='COLOR_HSV2RGB_FULL' ; namespace='cv' ; value='71']
INFO:root:constant: ['const cv.COLOR_HLS2BGR_FULL', '72', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_HLS2BGR_FULL' ; name='COLOR_HLS2BGR_FULL' ; namespace='cv' ; value='72']
INFO:root:constant: ['const cv.COLOR_HLS2RGB_FULL', '73', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_HLS2RGB_FULL' ; name='COLOR_HLS2RGB_FULL' ; namespace='cv' ; value='73']
INFO:root:constant: ['const cv.COLOR_LBGR2Lab', '74', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_LBGR2Lab' ; name='COLOR_LBGR2Lab' ; namespace='cv' ; value='74']
INFO:root:constant: ['const cv.COLOR_LRGB2Lab', '75', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_LRGB2Lab' ; name='COLOR_LRGB2Lab' ; namespace='cv' ; value='75']
INFO:root:constant: ['const cv.COLOR_LBGR2Luv', '76', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_LBGR2Luv' ; name='COLOR_LBGR2Luv' ; namespace='cv' ; value='76']
INFO:root:constant: ['const cv.COLOR_LRGB2Luv', '77', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_LRGB2Luv' ; name='COLOR_LRGB2Luv' ; namespace='cv' ; value='77']
INFO:root:constant: ['const cv.COLOR_Lab2LBGR', '78', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_Lab2LBGR' ; name='COLOR_Lab2LBGR' ; namespace='cv' ; value='78']
INFO:root:constant: ['const cv.COLOR_Lab2LRGB', '79', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_Lab2LRGB' ; name='COLOR_Lab2LRGB' ; namespace='cv' ; value='79']
INFO:root:constant: ['const cv.COLOR_Luv2LBGR', '80', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_Luv2LBGR' ; name='COLOR_Luv2LBGR' ; namespace='cv' ; value='80']
INFO:root:constant: ['const cv.COLOR_Luv2LRGB', '81', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_Luv2LRGB' ; name='COLOR_Luv2LRGB' ; namespace='cv' ; value='81']
INFO:root:constant: ['const cv.COLOR_BGR2YUV', '82', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2YUV' ; name='COLOR_BGR2YUV' ; namespace='cv' ; value='82']
INFO:root:constant: ['const cv.COLOR_RGB2YUV', '83', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2YUV' ; name='COLOR_RGB2YUV' ; namespace='cv' ; value='83']
INFO:root:constant: ['const cv.COLOR_YUV2BGR', '84', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR' ; name='COLOR_YUV2BGR' ; namespace='cv' ; value='84']
INFO:root:constant: ['const cv.COLOR_YUV2RGB', '85', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB' ; name='COLOR_YUV2RGB' ; namespace='cv' ; value='85']
INFO:root:constant: ['const cv.COLOR_YUV2RGB_NV12', '90', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB_NV12' ; name='COLOR_YUV2RGB_NV12' ; namespace='cv' ; value='90']
INFO:root:constant: ['const cv.COLOR_YUV2BGR_NV12', '91', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR_NV12' ; name='COLOR_YUV2BGR_NV12' ; namespace='cv' ; value='91']
INFO:root:constant: ['const cv.COLOR_YUV2RGB_NV21', '92', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB_NV21' ; name='COLOR_YUV2RGB_NV21' ; namespace='cv' ; value='92']
INFO:root:constant: ['const cv.COLOR_YUV2BGR_NV21', '93', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR_NV21' ; name='COLOR_YUV2BGR_NV21' ; namespace='cv' ; value='93']
INFO:root:constant: ['const cv.COLOR_YUV420sp2RGB', 'COLOR_YUV2RGB_NV21', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV420sp2RGB' ; name='COLOR_YUV420sp2RGB' ; namespace='cv' ; value='COLOR_YUV2RGB_NV21']
INFO:root:constant: ['const cv.COLOR_YUV420sp2BGR', 'COLOR_YUV2BGR_NV21', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV420sp2BGR' ; name='COLOR_YUV420sp2BGR' ; namespace='cv' ; value='COLOR_YUV2BGR_NV21']
INFO:root:constant: ['const cv.COLOR_YUV2RGBA_NV12', '94', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGBA_NV12' ; name='COLOR_YUV2RGBA_NV12' ; namespace='cv' ; value='94']
INFO:root:constant: ['const cv.COLOR_YUV2BGRA_NV12', '95', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGRA_NV12' ; name='COLOR_YUV2BGRA_NV12' ; namespace='cv' ; value='95']
INFO:root:constant: ['const cv.COLOR_YUV2RGBA_NV21', '96', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGBA_NV21' ; name='COLOR_YUV2RGBA_NV21' ; namespace='cv' ; value='96']
INFO:root:constant: ['const cv.COLOR_YUV2BGRA_NV21', '97', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGRA_NV21' ; name='COLOR_YUV2BGRA_NV21' ; namespace='cv' ; value='97']
INFO:root:constant: ['const cv.COLOR_YUV420sp2RGBA', 'COLOR_YUV2RGBA_NV21', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV420sp2RGBA' ; name='COLOR_YUV420sp2RGBA' ; namespace='cv' ; value='COLOR_YUV2RGBA_NV21']
INFO:root:constant: ['const cv.COLOR_YUV420sp2BGRA', 'COLOR_YUV2BGRA_NV21', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV420sp2BGRA' ; name='COLOR_YUV420sp2BGRA' ; namespace='cv' ; value='COLOR_YUV2BGRA_NV21']
INFO:root:constant: ['const cv.COLOR_YUV2RGB_YV12', '98', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB_YV12' ; name='COLOR_YUV2RGB_YV12' ; namespace='cv' ; value='98']
INFO:root:constant: ['const cv.COLOR_YUV2BGR_YV12', '99', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR_YV12' ; name='COLOR_YUV2BGR_YV12' ; namespace='cv' ; value='99']
INFO:root:constant: ['const cv.COLOR_YUV2RGB_IYUV', '100', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB_IYUV' ; name='COLOR_YUV2RGB_IYUV' ; namespace='cv' ; value='100']
INFO:root:constant: ['const cv.COLOR_YUV2BGR_IYUV', '101', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR_IYUV' ; name='COLOR_YUV2BGR_IYUV' ; namespace='cv' ; value='101']
INFO:root:constant: ['const cv.COLOR_YUV2RGB_I420', 'COLOR_YUV2RGB_IYUV', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB_I420' ; name='COLOR_YUV2RGB_I420' ; namespace='cv' ; value='COLOR_YUV2RGB_IYUV']
INFO:root:constant: ['const cv.COLOR_YUV2BGR_I420', 'COLOR_YUV2BGR_IYUV', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR_I420' ; name='COLOR_YUV2BGR_I420' ; namespace='cv' ; value='COLOR_YUV2BGR_IYUV']
INFO:root:constant: ['const cv.COLOR_YUV420p2RGB', 'COLOR_YUV2RGB_YV12', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV420p2RGB' ; name='COLOR_YUV420p2RGB' ; namespace='cv' ; value='COLOR_YUV2RGB_YV12']
INFO:root:constant: ['const cv.COLOR_YUV420p2BGR', 'COLOR_YUV2BGR_YV12', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV420p2BGR' ; name='COLOR_YUV420p2BGR' ; namespace='cv' ; value='COLOR_YUV2BGR_YV12']
INFO:root:constant: ['const cv.COLOR_YUV2RGBA_YV12', '102', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGBA_YV12' ; name='COLOR_YUV2RGBA_YV12' ; namespace='cv' ; value='102']
INFO:root:constant: ['const cv.COLOR_YUV2BGRA_YV12', '103', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGRA_YV12' ; name='COLOR_YUV2BGRA_YV12' ; namespace='cv' ; value='103']
INFO:root:constant: ['const cv.COLOR_YUV2RGBA_IYUV', '104', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGBA_IYUV' ; name='COLOR_YUV2RGBA_IYUV' ; namespace='cv' ; value='104']
INFO:root:constant: ['const cv.COLOR_YUV2BGRA_IYUV', '105', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGRA_IYUV' ; name='COLOR_YUV2BGRA_IYUV' ; namespace='cv' ; value='105']
INFO:root:constant: ['const cv.COLOR_YUV2RGBA_I420', 'COLOR_YUV2RGBA_IYUV', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGBA_I420' ; name='COLOR_YUV2RGBA_I420' ; namespace='cv' ; value='COLOR_YUV2RGBA_IYUV']
INFO:root:constant: ['const cv.COLOR_YUV2BGRA_I420', 'COLOR_YUV2BGRA_IYUV', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGRA_I420' ; name='COLOR_YUV2BGRA_I420' ; namespace='cv' ; value='COLOR_YUV2BGRA_IYUV']
INFO:root:constant: ['const cv.COLOR_YUV420p2RGBA', 'COLOR_YUV2RGBA_YV12', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV420p2RGBA' ; name='COLOR_YUV420p2RGBA' ; namespace='cv' ; value='COLOR_YUV2RGBA_YV12']
INFO:root:constant: ['const cv.COLOR_YUV420p2BGRA', 'COLOR_YUV2BGRA_YV12', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV420p2BGRA' ; name='COLOR_YUV420p2BGRA' ; namespace='cv' ; value='COLOR_YUV2BGRA_YV12']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_420', '106', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_420' ; name='COLOR_YUV2GRAY_420' ; namespace='cv' ; value='106']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_NV21', 'COLOR_YUV2GRAY_420', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_NV21' ; name='COLOR_YUV2GRAY_NV21' ; namespace='cv' ; value='COLOR_YUV2GRAY_420']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_NV12', 'COLOR_YUV2GRAY_420', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_NV12' ; name='COLOR_YUV2GRAY_NV12' ; namespace='cv' ; value='COLOR_YUV2GRAY_420']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_YV12', 'COLOR_YUV2GRAY_420', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_YV12' ; name='COLOR_YUV2GRAY_YV12' ; namespace='cv' ; value='COLOR_YUV2GRAY_420']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_IYUV', 'COLOR_YUV2GRAY_420', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_IYUV' ; name='COLOR_YUV2GRAY_IYUV' ; namespace='cv' ; value='COLOR_YUV2GRAY_420']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_I420', 'COLOR_YUV2GRAY_420', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_I420' ; name='COLOR_YUV2GRAY_I420' ; namespace='cv' ; value='COLOR_YUV2GRAY_420']
INFO:root:constant: ['const cv.COLOR_YUV420sp2GRAY', 'COLOR_YUV2GRAY_420', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV420sp2GRAY' ; name='COLOR_YUV420sp2GRAY' ; namespace='cv' ; value='COLOR_YUV2GRAY_420']
INFO:root:constant: ['const cv.COLOR_YUV420p2GRAY', 'COLOR_YUV2GRAY_420', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV420p2GRAY' ; name='COLOR_YUV420p2GRAY' ; namespace='cv' ; value='COLOR_YUV2GRAY_420']
INFO:root:constant: ['const cv.COLOR_YUV2RGB_UYVY', '107', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB_UYVY' ; name='COLOR_YUV2RGB_UYVY' ; namespace='cv' ; value='107']
INFO:root:constant: ['const cv.COLOR_YUV2BGR_UYVY', '108', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR_UYVY' ; name='COLOR_YUV2BGR_UYVY' ; namespace='cv' ; value='108']
INFO:root:constant: ['const cv.COLOR_YUV2RGB_Y422', 'COLOR_YUV2RGB_UYVY', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB_Y422' ; name='COLOR_YUV2RGB_Y422' ; namespace='cv' ; value='COLOR_YUV2RGB_UYVY']
INFO:root:constant: ['const cv.COLOR_YUV2BGR_Y422', 'COLOR_YUV2BGR_UYVY', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR_Y422' ; name='COLOR_YUV2BGR_Y422' ; namespace='cv' ; value='COLOR_YUV2BGR_UYVY']
INFO:root:constant: ['const cv.COLOR_YUV2RGB_UYNV', 'COLOR_YUV2RGB_UYVY', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB_UYNV' ; name='COLOR_YUV2RGB_UYNV' ; namespace='cv' ; value='COLOR_YUV2RGB_UYVY']
INFO:root:constant: ['const cv.COLOR_YUV2BGR_UYNV', 'COLOR_YUV2BGR_UYVY', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR_UYNV' ; name='COLOR_YUV2BGR_UYNV' ; namespace='cv' ; value='COLOR_YUV2BGR_UYVY']
INFO:root:constant: ['const cv.COLOR_YUV2RGBA_UYVY', '111', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGBA_UYVY' ; name='COLOR_YUV2RGBA_UYVY' ; namespace='cv' ; value='111']
INFO:root:constant: ['const cv.COLOR_YUV2BGRA_UYVY', '112', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGRA_UYVY' ; name='COLOR_YUV2BGRA_UYVY' ; namespace='cv' ; value='112']
INFO:root:constant: ['const cv.COLOR_YUV2RGBA_Y422', 'COLOR_YUV2RGBA_UYVY', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGBA_Y422' ; name='COLOR_YUV2RGBA_Y422' ; namespace='cv' ; value='COLOR_YUV2RGBA_UYVY']
INFO:root:constant: ['const cv.COLOR_YUV2BGRA_Y422', 'COLOR_YUV2BGRA_UYVY', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGRA_Y422' ; name='COLOR_YUV2BGRA_Y422' ; namespace='cv' ; value='COLOR_YUV2BGRA_UYVY']
INFO:root:constant: ['const cv.COLOR_YUV2RGBA_UYNV', 'COLOR_YUV2RGBA_UYVY', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGBA_UYNV' ; name='COLOR_YUV2RGBA_UYNV' ; namespace='cv' ; value='COLOR_YUV2RGBA_UYVY']
INFO:root:constant: ['const cv.COLOR_YUV2BGRA_UYNV', 'COLOR_YUV2BGRA_UYVY', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGRA_UYNV' ; name='COLOR_YUV2BGRA_UYNV' ; namespace='cv' ; value='COLOR_YUV2BGRA_UYVY']
INFO:root:constant: ['const cv.COLOR_YUV2RGB_YUY2', '115', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB_YUY2' ; name='COLOR_YUV2RGB_YUY2' ; namespace='cv' ; value='115']
INFO:root:constant: ['const cv.COLOR_YUV2BGR_YUY2', '116', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR_YUY2' ; name='COLOR_YUV2BGR_YUY2' ; namespace='cv' ; value='116']
INFO:root:constant: ['const cv.COLOR_YUV2RGB_YVYU', '117', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB_YVYU' ; name='COLOR_YUV2RGB_YVYU' ; namespace='cv' ; value='117']
INFO:root:constant: ['const cv.COLOR_YUV2BGR_YVYU', '118', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR_YVYU' ; name='COLOR_YUV2BGR_YVYU' ; namespace='cv' ; value='118']
INFO:root:constant: ['const cv.COLOR_YUV2RGB_YUYV', 'COLOR_YUV2RGB_YUY2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB_YUYV' ; name='COLOR_YUV2RGB_YUYV' ; namespace='cv' ; value='COLOR_YUV2RGB_YUY2']
INFO:root:constant: ['const cv.COLOR_YUV2BGR_YUYV', 'COLOR_YUV2BGR_YUY2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR_YUYV' ; name='COLOR_YUV2BGR_YUYV' ; namespace='cv' ; value='COLOR_YUV2BGR_YUY2']
INFO:root:constant: ['const cv.COLOR_YUV2RGB_YUNV', 'COLOR_YUV2RGB_YUY2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGB_YUNV' ; name='COLOR_YUV2RGB_YUNV' ; namespace='cv' ; value='COLOR_YUV2RGB_YUY2']
INFO:root:constant: ['const cv.COLOR_YUV2BGR_YUNV', 'COLOR_YUV2BGR_YUY2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGR_YUNV' ; name='COLOR_YUV2BGR_YUNV' ; namespace='cv' ; value='COLOR_YUV2BGR_YUY2']
INFO:root:constant: ['const cv.COLOR_YUV2RGBA_YUY2', '119', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGBA_YUY2' ; name='COLOR_YUV2RGBA_YUY2' ; namespace='cv' ; value='119']
INFO:root:constant: ['const cv.COLOR_YUV2BGRA_YUY2', '120', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGRA_YUY2' ; name='COLOR_YUV2BGRA_YUY2' ; namespace='cv' ; value='120']
INFO:root:constant: ['const cv.COLOR_YUV2RGBA_YVYU', '121', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGBA_YVYU' ; name='COLOR_YUV2RGBA_YVYU' ; namespace='cv' ; value='121']
INFO:root:constant: ['const cv.COLOR_YUV2BGRA_YVYU', '122', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGRA_YVYU' ; name='COLOR_YUV2BGRA_YVYU' ; namespace='cv' ; value='122']
INFO:root:constant: ['const cv.COLOR_YUV2RGBA_YUYV', 'COLOR_YUV2RGBA_YUY2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGBA_YUYV' ; name='COLOR_YUV2RGBA_YUYV' ; namespace='cv' ; value='COLOR_YUV2RGBA_YUY2']
INFO:root:constant: ['const cv.COLOR_YUV2BGRA_YUYV', 'COLOR_YUV2BGRA_YUY2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGRA_YUYV' ; name='COLOR_YUV2BGRA_YUYV' ; namespace='cv' ; value='COLOR_YUV2BGRA_YUY2']
INFO:root:constant: ['const cv.COLOR_YUV2RGBA_YUNV', 'COLOR_YUV2RGBA_YUY2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2RGBA_YUNV' ; name='COLOR_YUV2RGBA_YUNV' ; namespace='cv' ; value='COLOR_YUV2RGBA_YUY2']
INFO:root:constant: ['const cv.COLOR_YUV2BGRA_YUNV', 'COLOR_YUV2BGRA_YUY2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2BGRA_YUNV' ; name='COLOR_YUV2BGRA_YUNV' ; namespace='cv' ; value='COLOR_YUV2BGRA_YUY2']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_UYVY', '123', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_UYVY' ; name='COLOR_YUV2GRAY_UYVY' ; namespace='cv' ; value='123']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_YUY2', '124', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_YUY2' ; name='COLOR_YUV2GRAY_YUY2' ; namespace='cv' ; value='124']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_Y422', 'COLOR_YUV2GRAY_UYVY', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_Y422' ; name='COLOR_YUV2GRAY_Y422' ; namespace='cv' ; value='COLOR_YUV2GRAY_UYVY']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_UYNV', 'COLOR_YUV2GRAY_UYVY', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_UYNV' ; name='COLOR_YUV2GRAY_UYNV' ; namespace='cv' ; value='COLOR_YUV2GRAY_UYVY']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_YVYU', 'COLOR_YUV2GRAY_YUY2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_YVYU' ; name='COLOR_YUV2GRAY_YVYU' ; namespace='cv' ; value='COLOR_YUV2GRAY_YUY2']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_YUYV', 'COLOR_YUV2GRAY_YUY2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_YUYV' ; name='COLOR_YUV2GRAY_YUYV' ; namespace='cv' ; value='COLOR_YUV2GRAY_YUY2']
INFO:root:constant: ['const cv.COLOR_YUV2GRAY_YUNV', 'COLOR_YUV2GRAY_YUY2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_YUV2GRAY_YUNV' ; name='COLOR_YUV2GRAY_YUNV' ; namespace='cv' ; value='COLOR_YUV2GRAY_YUY2']
INFO:root:constant: ['const cv.COLOR_RGBA2mRGBA', '125', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGBA2mRGBA' ; name='COLOR_RGBA2mRGBA' ; namespace='cv' ; value='125']
INFO:root:constant: ['const cv.COLOR_mRGBA2RGBA', '126', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_mRGBA2RGBA' ; name='COLOR_mRGBA2RGBA' ; namespace='cv' ; value='126']
INFO:root:constant: ['const cv.COLOR_RGB2YUV_I420', '127', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2YUV_I420' ; name='COLOR_RGB2YUV_I420' ; namespace='cv' ; value='127']
INFO:root:constant: ['const cv.COLOR_BGR2YUV_I420', '128', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2YUV_I420' ; name='COLOR_BGR2YUV_I420' ; namespace='cv' ; value='128']
INFO:root:constant: ['const cv.COLOR_RGB2YUV_IYUV', 'COLOR_RGB2YUV_I420', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2YUV_IYUV' ; name='COLOR_RGB2YUV_IYUV' ; namespace='cv' ; value='COLOR_RGB2YUV_I420']
INFO:root:constant: ['const cv.COLOR_BGR2YUV_IYUV', 'COLOR_BGR2YUV_I420', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2YUV_IYUV' ; name='COLOR_BGR2YUV_IYUV' ; namespace='cv' ; value='COLOR_BGR2YUV_I420']
INFO:root:constant: ['const cv.COLOR_RGBA2YUV_I420', '129', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGBA2YUV_I420' ; name='COLOR_RGBA2YUV_I420' ; namespace='cv' ; value='129']
INFO:root:constant: ['const cv.COLOR_BGRA2YUV_I420', '130', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGRA2YUV_I420' ; name='COLOR_BGRA2YUV_I420' ; namespace='cv' ; value='130']
INFO:root:constant: ['const cv.COLOR_RGBA2YUV_IYUV', 'COLOR_RGBA2YUV_I420', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGBA2YUV_IYUV' ; name='COLOR_RGBA2YUV_IYUV' ; namespace='cv' ; value='COLOR_RGBA2YUV_I420']
INFO:root:constant: ['const cv.COLOR_BGRA2YUV_IYUV', 'COLOR_BGRA2YUV_I420', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGRA2YUV_IYUV' ; name='COLOR_BGRA2YUV_IYUV' ; namespace='cv' ; value='COLOR_BGRA2YUV_I420']
INFO:root:constant: ['const cv.COLOR_RGB2YUV_YV12', '131', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGB2YUV_YV12' ; name='COLOR_RGB2YUV_YV12' ; namespace='cv' ; value='131']
INFO:root:constant: ['const cv.COLOR_BGR2YUV_YV12', '132', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGR2YUV_YV12' ; name='COLOR_BGR2YUV_YV12' ; namespace='cv' ; value='132']
INFO:root:constant: ['const cv.COLOR_RGBA2YUV_YV12', '133', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_RGBA2YUV_YV12' ; name='COLOR_RGBA2YUV_YV12' ; namespace='cv' ; value='133']
INFO:root:constant: ['const cv.COLOR_BGRA2YUV_YV12', '134', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BGRA2YUV_YV12' ; name='COLOR_BGRA2YUV_YV12' ; namespace='cv' ; value='134']
INFO:root:constant: ['const cv.COLOR_BayerBG2BGR', '46', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerBG2BGR' ; name='COLOR_BayerBG2BGR' ; namespace='cv' ; value='46']
INFO:root:constant: ['const cv.COLOR_BayerGB2BGR', '47', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGB2BGR' ; name='COLOR_BayerGB2BGR' ; namespace='cv' ; value='47']
INFO:root:constant: ['const cv.COLOR_BayerRG2BGR', '48', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerRG2BGR' ; name='COLOR_BayerRG2BGR' ; namespace='cv' ; value='48']
INFO:root:constant: ['const cv.COLOR_BayerGR2BGR', '49', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGR2BGR' ; name='COLOR_BayerGR2BGR' ; namespace='cv' ; value='49']
INFO:root:constant: ['const cv.COLOR_BayerBG2RGB', 'COLOR_BayerRG2BGR', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerBG2RGB' ; name='COLOR_BayerBG2RGB' ; namespace='cv' ; value='COLOR_BayerRG2BGR']
INFO:root:constant: ['const cv.COLOR_BayerGB2RGB', 'COLOR_BayerGR2BGR', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGB2RGB' ; name='COLOR_BayerGB2RGB' ; namespace='cv' ; value='COLOR_BayerGR2BGR']
INFO:root:constant: ['const cv.COLOR_BayerRG2RGB', 'COLOR_BayerBG2BGR', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerRG2RGB' ; name='COLOR_BayerRG2RGB' ; namespace='cv' ; value='COLOR_BayerBG2BGR']
INFO:root:constant: ['const cv.COLOR_BayerGR2RGB', 'COLOR_BayerGB2BGR', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGR2RGB' ; name='COLOR_BayerGR2RGB' ; namespace='cv' ; value='COLOR_BayerGB2BGR']
INFO:root:constant: ['const cv.COLOR_BayerBG2GRAY', '86', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerBG2GRAY' ; name='COLOR_BayerBG2GRAY' ; namespace='cv' ; value='86']
INFO:root:constant: ['const cv.COLOR_BayerGB2GRAY', '87', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGB2GRAY' ; name='COLOR_BayerGB2GRAY' ; namespace='cv' ; value='87']
INFO:root:constant: ['const cv.COLOR_BayerRG2GRAY', '88', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerRG2GRAY' ; name='COLOR_BayerRG2GRAY' ; namespace='cv' ; value='88']
INFO:root:constant: ['const cv.COLOR_BayerGR2GRAY', '89', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGR2GRAY' ; name='COLOR_BayerGR2GRAY' ; namespace='cv' ; value='89']
INFO:root:constant: ['const cv.COLOR_BayerBG2BGR_VNG', '62', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerBG2BGR_VNG' ; name='COLOR_BayerBG2BGR_VNG' ; namespace='cv' ; value='62']
INFO:root:constant: ['const cv.COLOR_BayerGB2BGR_VNG', '63', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGB2BGR_VNG' ; name='COLOR_BayerGB2BGR_VNG' ; namespace='cv' ; value='63']
INFO:root:constant: ['const cv.COLOR_BayerRG2BGR_VNG', '64', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerRG2BGR_VNG' ; name='COLOR_BayerRG2BGR_VNG' ; namespace='cv' ; value='64']
INFO:root:constant: ['const cv.COLOR_BayerGR2BGR_VNG', '65', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGR2BGR_VNG' ; name='COLOR_BayerGR2BGR_VNG' ; namespace='cv' ; value='65']
INFO:root:constant: ['const cv.COLOR_BayerBG2RGB_VNG', 'COLOR_BayerRG2BGR_VNG', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerBG2RGB_VNG' ; name='COLOR_BayerBG2RGB_VNG' ; namespace='cv' ; value='COLOR_BayerRG2BGR_VNG']
INFO:root:constant: ['const cv.COLOR_BayerGB2RGB_VNG', 'COLOR_BayerGR2BGR_VNG', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGB2RGB_VNG' ; name='COLOR_BayerGB2RGB_VNG' ; namespace='cv' ; value='COLOR_BayerGR2BGR_VNG']
INFO:root:constant: ['const cv.COLOR_BayerRG2RGB_VNG', 'COLOR_BayerBG2BGR_VNG', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerRG2RGB_VNG' ; name='COLOR_BayerRG2RGB_VNG' ; namespace='cv' ; value='COLOR_BayerBG2BGR_VNG']
INFO:root:constant: ['const cv.COLOR_BayerGR2RGB_VNG', 'COLOR_BayerGB2BGR_VNG', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGR2RGB_VNG' ; name='COLOR_BayerGR2RGB_VNG' ; namespace='cv' ; value='COLOR_BayerGB2BGR_VNG']
INFO:root:constant: ['const cv.COLOR_BayerBG2BGR_EA', '135', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerBG2BGR_EA' ; name='COLOR_BayerBG2BGR_EA' ; namespace='cv' ; value='135']
INFO:root:constant: ['const cv.COLOR_BayerGB2BGR_EA', '136', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGB2BGR_EA' ; name='COLOR_BayerGB2BGR_EA' ; namespace='cv' ; value='136']
INFO:root:constant: ['const cv.COLOR_BayerRG2BGR_EA', '137', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerRG2BGR_EA' ; name='COLOR_BayerRG2BGR_EA' ; namespace='cv' ; value='137']
INFO:root:constant: ['const cv.COLOR_BayerGR2BGR_EA', '138', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGR2BGR_EA' ; name='COLOR_BayerGR2BGR_EA' ; namespace='cv' ; value='138']
INFO:root:constant: ['const cv.COLOR_BayerBG2RGB_EA', 'COLOR_BayerRG2BGR_EA', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerBG2RGB_EA' ; name='COLOR_BayerBG2RGB_EA' ; namespace='cv' ; value='COLOR_BayerRG2BGR_EA']
INFO:root:constant: ['const cv.COLOR_BayerGB2RGB_EA', 'COLOR_BayerGR2BGR_EA', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGB2RGB_EA' ; name='COLOR_BayerGB2RGB_EA' ; namespace='cv' ; value='COLOR_BayerGR2BGR_EA']
INFO:root:constant: ['const cv.COLOR_BayerRG2RGB_EA', 'COLOR_BayerBG2BGR_EA', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerRG2RGB_EA' ; name='COLOR_BayerRG2RGB_EA' ; namespace='cv' ; value='COLOR_BayerBG2BGR_EA']
INFO:root:constant: ['const cv.COLOR_BayerGR2RGB_EA', 'COLOR_BayerGB2BGR_EA', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_BayerGR2RGB_EA' ; name='COLOR_BayerGR2RGB_EA' ; namespace='cv' ; value='COLOR_BayerGB2BGR_EA']
INFO:root:constant: ['const cv.COLOR_COLORCVT_MAX', '139', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLOR_COLORCVT_MAX' ; name='COLOR_COLORCVT_MAX' ; namespace='cv' ; value='139']
INFO:root:constant: ['const cv.INTERSECT_NONE', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTERSECT_NONE' ; name='INTERSECT_NONE' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.INTERSECT_PARTIAL', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTERSECT_PARTIAL' ; name='INTERSECT_PARTIAL' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.INTERSECT_FULL', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='INTERSECT_FULL' ; name='INTERSECT_FULL' ; namespace='cv' ; value='2']
INFO:root:class: ['class cv.CLAHE', ': cv::Algorithm', [], []]
INFO:root:ok: ClassInfo [base='Algorithm' ; classname='' ; classpath='' ; cname='CLAHE' ; consts='[]' ; imports='set(['org.opencv.core.Algorithm'])' ; jname='CLAHE' ; methods='{}' ; methods_suffixes='{}' ; name='CLAHE' ; namespace='cv' ; private_consts='[]' ; props='[]']
INFO:root:function: ['cv.CLAHE.apply', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6e110>]' ; isconstructor='False' ; jname='apply']
INFO:root:function: ['cv.CLAHE.setClipLimit', 'void', [], [['double', 'clipLimit', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6e1d0>]' ; isconstructor='False' ; jname='setClipLimit']
INFO:root:function: ['cv.CLAHE.getClipLimit', 'double', [], []]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6e290>]' ; isconstructor='False' ; jname='getClipLimit']
INFO:root:function: ['cv.CLAHE.setTilesGridSize', 'void', [], [['Size', 'tileGridSize', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6e310>]' ; isconstructor='False' ; jname='setTilesGridSize']
INFO:root:function: ['cv.CLAHE.getTilesGridSize', 'Size', [], []]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6e2d0>]' ; isconstructor='False' ; jname='getTilesGridSize']
INFO:root:function: ['cv.CLAHE.collectGarbage', 'void', [], []]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6e450>]' ; isconstructor='False' ; jname='collectGarbage']
INFO:root:class: ['class cv.Subdiv2D', '', [], []]
INFO:root:ok: ClassInfo [base='' ; classname='' ; classpath='' ; cname='Subdiv2D' ; consts='[]' ; imports='set([])' ; jname='Subdiv2D' ; methods='{}' ; methods_suffixes='{}' ; name='Subdiv2D' ; namespace='cv' ; private_consts='[]' ; props='[]']
INFO:root:constant: ['const cv.Subdiv2D.PTLOC_ERROR', '-2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='PTLOC_ERROR' ; name='PTLOC_ERROR' ; namespace='cv' ; value='-2']
INFO:root:constant: ['const cv.Subdiv2D.PTLOC_OUTSIDE_RECT', '-1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='PTLOC_OUTSIDE_RECT' ; name='PTLOC_OUTSIDE_RECT' ; namespace='cv' ; value='-1']
INFO:root:constant: ['const cv.Subdiv2D.PTLOC_INSIDE', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='PTLOC_INSIDE' ; name='PTLOC_INSIDE' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.Subdiv2D.PTLOC_VERTEX', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='PTLOC_VERTEX' ; name='PTLOC_VERTEX' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.Subdiv2D.PTLOC_ON_EDGE', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='PTLOC_ON_EDGE' ; name='PTLOC_ON_EDGE' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.Subdiv2D.NEXT_AROUND_ORG', '0x00', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='NEXT_AROUND_ORG' ; name='NEXT_AROUND_ORG' ; namespace='cv' ; value='0x00']
INFO:root:constant: ['const cv.Subdiv2D.NEXT_AROUND_DST', '0x22', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='NEXT_AROUND_DST' ; name='NEXT_AROUND_DST' ; namespace='cv' ; value='0x22']
INFO:root:constant: ['const cv.Subdiv2D.PREV_AROUND_ORG', '0x11', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='PREV_AROUND_ORG' ; name='PREV_AROUND_ORG' ; namespace='cv' ; value='0x11']
INFO:root:constant: ['const cv.Subdiv2D.PREV_AROUND_DST', '0x33', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='PREV_AROUND_DST' ; name='PREV_AROUND_DST' ; namespace='cv' ; value='0x33']
INFO:root:constant: ['const cv.Subdiv2D.NEXT_AROUND_LEFT', '0x13', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='NEXT_AROUND_LEFT' ; name='NEXT_AROUND_LEFT' ; namespace='cv' ; value='0x13']
INFO:root:constant: ['const cv.Subdiv2D.NEXT_AROUND_RIGHT', '0x31', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='NEXT_AROUND_RIGHT' ; name='NEXT_AROUND_RIGHT' ; namespace='cv' ; value='0x31']
INFO:root:constant: ['const cv.Subdiv2D.PREV_AROUND_LEFT', '0x20', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='PREV_AROUND_LEFT' ; name='PREV_AROUND_LEFT' ; namespace='cv' ; value='0x20']
INFO:root:constant: ['const cv.Subdiv2D.PREV_AROUND_RIGHT', '0x02', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Subdiv2D' ; classpath='Subdiv2D' ; cname='PREV_AROUND_RIGHT' ; name='PREV_AROUND_RIGHT' ; namespace='cv' ; value='0x02']
INFO:root:function: ['cv.Subdiv2D.Subdiv2D', '', [], []]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6e550>]' ; isconstructor='True' ; jname='Subdiv2D']
INFO:root:function: ['cv.Subdiv2D.Subdiv2D', '', [], [['Rect', 'rect', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6e950>]' ; isconstructor='True' ; jname='Subdiv2D']
INFO:root:function: ['cv.Subdiv2D.initDelaunay', 'void', [], [['Rect', 'rect', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6e9d0>]' ; isconstructor='False' ; jname='initDelaunay']
INFO:root:function: ['cv.Subdiv2D.insert', 'int', [], [['Point2f', 'pt', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6ea10>]' ; isconstructor='False' ; jname='insert']
INFO:root:function: ['cv.Subdiv2D.insert', 'void', [], [['vector_Point2f', 'ptvec', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6ea90>]' ; isconstructor='False' ; jname='insert']
INFO:root:function: ['cv.Subdiv2D.locate', 'int', [], [['Point2f', 'pt', '', []], ['int', 'edge', '', ['/O']], ['int', 'vertex', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6eb10>]' ; isconstructor='False' ; jname='locate']
INFO:root:function: ['cv.Subdiv2D.findNearest', 'int', [], [['Point2f', 'pt', '', []], ['Point2f*', 'nearestPt', '0', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6ec90>]' ; isconstructor='False' ; jname='findNearest']
INFO:root:function: ['cv.Subdiv2D.getEdgeList', 'void', [], [['vector_Vec4f', 'edgeList', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6ed90>]' ; isconstructor='False' ; jname='getEdgeList']
INFO:root:function: ['cv.Subdiv2D.getTriangleList', 'void', [], [['vector_Vec6f', 'triangleList', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6ee50>]' ; isconstructor='False' ; jname='getTriangleList']
INFO:root:function: ['cv.Subdiv2D.getVoronoiFacetList', 'void', [], [['vector_int', 'idx', '', []], ['vector_vector_Point2f', 'facetList', '', ['/O']], ['vector_Point2f', 'facetCenters', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x105a6ef10>]' ; isconstructor='False' ; jname='getVoronoiFacetList']
INFO:root:function: ['cv.Subdiv2D.getVertex', 'Point2f', [], [['int', 'vertex', '', []], ['int*', 'firstEdge', '0', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bb090>]' ; isconstructor='False' ; jname='getVertex']
INFO:root:function: ['cv.Subdiv2D.getEdge', 'int', [], [['int', 'edge', '', []], ['int', 'nextEdgeType', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bb190>]' ; isconstructor='False' ; jname='getEdge']
INFO:root:function: ['cv.Subdiv2D.nextEdge', 'int', [], [['int', 'edge', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bb290>]' ; isconstructor='False' ; jname='nextEdge']
INFO:root:function: ['cv.Subdiv2D.rotateEdge', 'int', [], [['int', 'edge', '', []], ['int', 'rotate', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bb2d0>]' ; isconstructor='False' ; jname='rotateEdge']
INFO:root:function: ['cv.Subdiv2D.symEdge', 'int', [], [['int', 'edge', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bb410>]' ; isconstructor='False' ; jname='symEdge']
INFO:root:function: ['cv.Subdiv2D.edgeOrg', 'int', [], [['int', 'edge', '', []], ['Point2f*', 'orgpt', '0', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bb490>]' ; isconstructor='False' ; jname='edgeOrg']
INFO:root:function: ['cv.Subdiv2D.edgeDst', 'int', [], [['int', 'edge', '', []], ['Point2f*', 'dstpt', '0', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bb610>]' ; isconstructor='False' ; jname='edgeDst']
INFO:root:class: ['class cv.LineSegmentDetector', ': cv::Algorithm', [], []]
INFO:root:ok: ClassInfo [base='Algorithm' ; classname='' ; classpath='' ; cname='LineSegmentDetector' ; consts='[]' ; imports='set(['org.opencv.core.Algorithm'])' ; jname='LineSegmentDetector' ; methods='{}' ; methods_suffixes='{}' ; name='LineSegmentDetector' ; namespace='cv' ; private_consts='[]' ; props='[]']
INFO:root:function: ['cv.LineSegmentDetector.detect', 'void', [], [['Mat', '_image', '', []], ['Mat', '_lines', '', ['/O']], ['Mat', 'width', 'Mat()', ['/O']], ['Mat', 'prec', 'Mat()', ['/O']], ['Mat', 'nfa', 'Mat()', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bb810>]' ; isconstructor='False' ; jname='detect']
INFO:root:function: ['cv.LineSegmentDetector.drawSegments', 'void', [], [['Mat', '_image', '', ['/IO']], ['Mat', 'lines', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bb9d0>]' ; isconstructor='False' ; jname='drawSegments']
INFO:root:function: ['cv.LineSegmentDetector.compareSegments', 'int', [], [['Size', 'size', '', []], ['Mat', 'lines1', '', []], ['Mat', 'lines2', '', []], ['Mat', '_image', 'Mat()', ['/IO']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bbad0>]' ; isconstructor='False' ; jname='compareSegments']
INFO:root:function: ['cv.createLineSegmentDetector', 'Ptr_LineSegmentDetector', [], [['int', '_refine', 'LSD_REFINE_STD', []], ['double', '_scale', '0.8', []], ['double', '_sigma_scale', '0.6', []], ['double', '_quant', '2.0', []], ['double', '_ang_th', '22.5', []], ['double', '_log_eps', '0', []], ['double', '_density_th', '0.7', []], ['int', '_n_bins', '1024', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bbc50>]' ; isconstructor='False' ; jname='createLineSegmentDetector']
INFO:root:function: ['cv.getGaussianKernel', 'Mat', [], [['int', 'ksize', '', []], ['double', 'sigma', '', []], ['int', 'ktype', 'CV_64F', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bbf10>]' ; isconstructor='False' ; jname='getGaussianKernel']
INFO:root:function: ['cv.getDerivKernels', 'void', [], [['Mat', 'kx', '', ['/O']], ['Mat', 'ky', '', ['/O']], ['int', 'dx', '', []], ['int', 'dy', '', []], ['int', 'ksize', '', []], ['bool', 'normalize', 'false', []], ['int', 'ktype', 'CV_32F', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bc090>]' ; isconstructor='False' ; jname='getDerivKernels']
INFO:root:function: ['cv.getGaborKernel', 'Mat', [], [['Size', 'ksize', '', []], ['double', 'sigma', '', []], ['double', 'theta', '', []], ['double', 'lambd', '', []], ['double', 'gamma', '', []], ['double', 'psi', 'CV_PI*0.5', []], ['int', 'ktype', 'CV_64F', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bc2d0>]' ; isconstructor='False' ; jname='getGaborKernel']
INFO:root:function: ['cv.getStructuringElement', 'Mat', [], [['int', 'shape', '', []], ['Size', 'ksize', '', []], ['Point', 'anchor', 'Point(-1,-1)', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bc510>]' ; isconstructor='False' ; jname='getStructuringElement']
INFO:root:function: ['cv.medianBlur', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'ksize', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bc690>]' ; isconstructor='False' ; jname='medianBlur']
INFO:root:function: ['cv.GaussianBlur', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Size', 'ksize', '', []], ['double', 'sigmaX', '', []], ['double', 'sigmaY', '0', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bc7d0>]' ; isconstructor='False' ; jname='GaussianBlur']
INFO:root:function: ['cv.bilateralFilter', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'd', '', []], ['double', 'sigmaColor', '', []], ['double', 'sigmaSpace', '', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bc9d0>]' ; isconstructor='False' ; jname='bilateralFilter']
INFO:root:function: ['cv.boxFilter', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'ddepth', '', []], ['Size', 'ksize', '', []], ['Point', 'anchor', 'Point(-1,-1)', []], ['bool', 'normalize', 'true', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bcbd0>]' ; isconstructor='False' ; jname='boxFilter']
INFO:root:function: ['cv.sqrBoxFilter', 'void', [], [['Mat', '_src', '', []], ['Mat', '_dst', '', ['/O']], ['int', 'ddepth', '', []], ['Size', 'ksize', '', []], ['Point', 'anchor', 'Point(-1, -1)', []], ['bool', 'normalize', 'true', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bce10>]' ; isconstructor='False' ; jname='sqrBoxFilter']
INFO:root:function: ['cv.blur', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Size', 'ksize', '', []], ['Point', 'anchor', 'Point(-1,-1)', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bf090>]' ; isconstructor='False' ; jname='blur']
INFO:root:function: ['cv.filter2D', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'ddepth', '', []], ['Mat', 'kernel', '', []], ['Point', 'anchor', 'Point(-1,-1)', []], ['double', 'delta', '0', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bf250>]' ; isconstructor='False' ; jname='filter2D']
INFO:root:function: ['cv.sepFilter2D', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'ddepth', '', []], ['Mat', 'kernelX', '', []], ['Mat', 'kernelY', '', []], ['Point', 'anchor', 'Point(-1,-1)', []], ['double', 'delta', '0', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bf490>]' ; isconstructor='False' ; jname='sepFilter2D']
INFO:root:function: ['cv.Sobel', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'ddepth', '', []], ['int', 'dx', '', []], ['int', 'dy', '', []], ['int', 'ksize', '3', []], ['double', 'scale', '1', []], ['double', 'delta', '0', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bf710>]' ; isconstructor='False' ; jname='Sobel']
INFO:root:function: ['cv.Scharr', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'ddepth', '', []], ['int', 'dx', '', []], ['int', 'dy', '', []], ['double', 'scale', '1', []], ['double', 'delta', '0', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bf9d0>]' ; isconstructor='False' ; jname='Scharr']
INFO:root:function: ['cv.Laplacian', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'ddepth', '', []], ['int', 'ksize', '1', []], ['double', 'scale', '1', []], ['double', 'delta', '0', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bfc50>]' ; isconstructor='False' ; jname='Laplacian']
INFO:root:function: ['cv.Canny', 'void', [], [['Mat', 'image', '', []], ['Mat', 'edges', '', ['/O']], ['double', 'threshold1', '', []], ['double', 'threshold2', '', []], ['int', 'apertureSize', '3', []], ['bool', 'L2gradient', 'false', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059bfe90>]' ; isconstructor='False' ; jname='Canny']
INFO:root:function: ['cv.cornerMinEigenVal', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'blockSize', '', []], ['int', 'ksize', '3', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c00d0>]' ; isconstructor='False' ; jname='cornerMinEigenVal']
INFO:root:function: ['cv.cornerHarris', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'blockSize', '', []], ['int', 'ksize', '', []], ['double', 'k', '', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c0290>]' ; isconstructor='False' ; jname='cornerHarris']
INFO:root:function: ['cv.cornerEigenValsAndVecs', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'blockSize', '', []], ['int', 'ksize', '', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c0490>]' ; isconstructor='False' ; jname='cornerEigenValsAndVecs']
INFO:root:function: ['cv.preCornerDetect', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'ksize', '', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c0690>]' ; isconstructor='False' ; jname='preCornerDetect']
INFO:root:function: ['cv.cornerSubPix', 'void', [], [['Mat', 'image', '', []], ['Mat', 'corners', '', ['/IO']], ['Size', 'winSize', '', []], ['Size', 'zeroZone', '', []], ['TermCriteria', 'criteria', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c0810>]' ; isconstructor='False' ; jname='cornerSubPix']
INFO:root:function: ['cv.goodFeaturesToTrack', 'void', [], [['Mat', 'image', '', []], ['Mat', 'corners', '', ['/O']], ['int', 'maxCorners', '', []], ['double', 'qualityLevel', '', []], ['double', 'minDistance', '', []], ['Mat', 'mask', 'Mat()', []], ['int', 'blockSize', '3', []], ['bool', 'useHarrisDetector', 'false', []], ['double', 'k', '0.04', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c09d0>]' ; isconstructor='False' ; jname='goodFeaturesToTrack']
INFO:root:function: ['cv.HoughLines', 'void', [], [['Mat', 'image', '', []], ['Mat', 'lines', '', ['/O']], ['double', 'rho', '', []], ['double', 'theta', '', []], ['int', 'threshold', '', []], ['double', 'srn', '0', []], ['double', 'stn', '0', []], ['double', 'min_theta', '0', []], ['double', 'max_theta', 'CV_PI', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c0c90>]' ; isconstructor='False' ; jname='HoughLines']
INFO:root:function: ['cv.HoughLinesP', 'void', [], [['Mat', 'image', '', []], ['Mat', 'lines', '', ['/O']], ['double', 'rho', '', []], ['double', 'theta', '', []], ['int', 'threshold', '', []], ['double', 'minLineLength', '0', []], ['double', 'maxLineGap', '0', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c0f50>]' ; isconstructor='False' ; jname='HoughLinesP']
INFO:root:function: ['cv.HoughCircles', 'void', [], [['Mat', 'image', '', []], ['Mat', 'circles', '', ['/O']], ['int', 'method', '', []], ['double', 'dp', '', []], ['double', 'minDist', '', []], ['double', 'param1', '100', []], ['double', 'param2', '100', []], ['int', 'minRadius', '0', []], ['int', 'maxRadius', '0', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c11d0>]' ; isconstructor='False' ; jname='HoughCircles']
INFO:root:function: ['cv.erode', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Mat', 'kernel', '', []], ['Point', 'anchor', 'Point(-1,-1)', []], ['int', 'iterations', '1', []], ['int', 'borderType', 'BORDER_CONSTANT', []], ['Scalar', 'borderValue', 'morphologyDefaultBorderValue()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c1490>]' ; isconstructor='False' ; jname='erode']
INFO:root:function: ['cv.dilate', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Mat', 'kernel', '', []], ['Point', 'anchor', 'Point(-1,-1)', []], ['int', 'iterations', '1', []], ['int', 'borderType', 'BORDER_CONSTANT', []], ['Scalar', 'borderValue', 'morphologyDefaultBorderValue()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c16d0>]' ; isconstructor='False' ; jname='dilate']
INFO:root:function: ['cv.morphologyEx', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'op', '', []], ['Mat', 'kernel', '', []], ['Point', 'anchor', 'Point(-1,-1)', []], ['int', 'iterations', '1', []], ['int', 'borderType', 'BORDER_CONSTANT', []], ['Scalar', 'borderValue', 'morphologyDefaultBorderValue()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c1910>]' ; isconstructor='False' ; jname='morphologyEx']
INFO:root:function: ['cv.resize', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Size', 'dsize', '', []], ['double', 'fx', '0', []], ['double', 'fy', '0', []], ['int', 'interpolation', 'INTER_LINEAR', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c1b90>]' ; isconstructor='False' ; jname='resize']
INFO:root:function: ['cv.warpAffine', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Mat', 'M', '', []], ['Size', 'dsize', '', []], ['int', 'flags', 'INTER_LINEAR', []], ['int', 'borderMode', 'BORDER_CONSTANT', []], ['Scalar', 'borderValue', 'Scalar()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c1d90>]' ; isconstructor='False' ; jname='warpAffine']
INFO:root:function: ['cv.warpPerspective', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Mat', 'M', '', []], ['Size', 'dsize', '', []], ['int', 'flags', 'INTER_LINEAR', []], ['int', 'borderMode', 'BORDER_CONSTANT', []], ['Scalar', 'borderValue', 'Scalar()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c1fd0>]' ; isconstructor='False' ; jname='warpPerspective']
INFO:root:function: ['cv.remap', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Mat', 'map1', '', []], ['Mat', 'map2', '', []], ['int', 'interpolation', '', []], ['int', 'borderMode', 'BORDER_CONSTANT', []], ['Scalar', 'borderValue', 'Scalar()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c2250>]' ; isconstructor='False' ; jname='remap']
INFO:root:function: ['cv.convertMaps', 'void', [], [['Mat', 'map1', '', []], ['Mat', 'map2', '', []], ['Mat', 'dstmap1', '', ['/O']], ['Mat', 'dstmap2', '', ['/O']], ['int', 'dstmap1type', '', []], ['bool', 'nninterpolation', 'false', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c2490>]' ; isconstructor='False' ; jname='convertMaps']
INFO:root:function: ['cv.getRotationMatrix2D', 'Mat', [], [['Point2f', 'center', '', []], ['double', 'angle', '', []], ['double', 'scale', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c2690>]' ; isconstructor='False' ; jname='getRotationMatrix2D']
INFO:root:function: ['cv.invertAffineTransform', 'void', [], [['Mat', 'M', '', []], ['Mat', 'iM', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c27d0>]' ; isconstructor='False' ; jname='invertAffineTransform']
INFO:root:function: ['cv.getPerspectiveTransform', 'Mat', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c2910>]' ; isconstructor='False' ; jname='getPerspectiveTransform']
INFO:root:function: ['cv.getAffineTransform', 'Mat', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c2a50>]' ; isconstructor='False' ; jname='getAffineTransform']
INFO:root:function: ['cv.getRectSubPix', 'void', [], [['Mat', 'image', '', []], ['Size', 'patchSize', '', []], ['Point2f', 'center', '', []], ['Mat', 'patch', '', ['/O']], ['int', 'patchType', '-1', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c2b10>]' ; isconstructor='False' ; jname='getRectSubPix']
INFO:root:function: ['cv.logPolar', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Point2f', 'center', '', []], ['double', 'M', '', []], ['int', 'flags', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c2d10>]' ; isconstructor='False' ; jname='logPolar']
INFO:root:function: ['cv.linearPolar', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Point2f', 'center', '', []], ['double', 'maxRadius', '', []], ['int', 'flags', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c2ed0>]' ; isconstructor='False' ; jname='linearPolar']
INFO:root:function: ['cv.integral', 'void', [], [['Mat', 'src', '', []], ['Mat', 'sum', '', ['/O']], ['int', 'sdepth', '-1', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c30d0>]' ; isconstructor='False' ; jname='integral']
INFO:root:function: ['cv.integral', 'void', ['=integral2'], [['Mat', 'src', '', []], ['Mat', 'sum', '', ['/O']], ['Mat', 'sqsum', '', ['/O']], ['int', 'sdepth', '-1', []], ['int', 'sqdepth', '-1', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c3210>]' ; isconstructor='False' ; jname='integral2']
INFO:root:function: ['cv.integral', 'void', ['=integral3'], [['Mat', 'src', '', []], ['Mat', 'sum', '', ['/O']], ['Mat', 'sqsum', '', ['/O']], ['Mat', 'tilted', '', ['/O']], ['int', 'sdepth', '-1', []], ['int', 'sqdepth', '-1', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c33d0>]' ; isconstructor='False' ; jname='integral3']
INFO:root:function: ['cv.accumulate', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/IO']], ['Mat', 'mask', 'Mat()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c35d0>]' ; isconstructor='False' ; jname='accumulate']
INFO:root:function: ['cv.accumulateSquare', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/IO']], ['Mat', 'mask', 'Mat()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c3710>]' ; isconstructor='False' ; jname='accumulateSquare']
INFO:root:function: ['cv.accumulateProduct', 'void', [], [['Mat', 'src1', '', []], ['Mat', 'src2', '', []], ['Mat', 'dst', '', ['/IO']], ['Mat', 'mask', 'Mat()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c3850>]' ; isconstructor='False' ; jname='accumulateProduct']
INFO:root:function: ['cv.accumulateWeighted', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/IO']], ['double', 'alpha', '', []], ['Mat', 'mask', 'Mat()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c39d0>]' ; isconstructor='False' ; jname='accumulateWeighted']
INFO:root:function: ['cv.phaseCorrelate', 'Point2d', [], [['Mat', 'src1', '', []], ['Mat', 'src2', '', []], ['Mat', 'window', 'Mat()', []], ['double*', 'response', '0', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c3b50>]' ; isconstructor='False' ; jname='phaseCorrelate']
INFO:root:function: ['cv.createHanningWindow', 'void', [], [['Mat', 'dst', '', ['/O']], ['Size', 'winSize', '', []], ['int', 'type', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c3cd0>]' ; isconstructor='False' ; jname='createHanningWindow']
INFO:root:function: ['cv.threshold', 'double', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['double', 'thresh', '', []], ['double', 'maxval', '', []], ['int', 'type', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c3dd0>]' ; isconstructor='False' ; jname='threshold']
INFO:root:function: ['cv.adaptiveThreshold', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['double', 'maxValue', '', []], ['int', 'adaptiveMethod', '', []], ['int', 'thresholdType', '', []], ['int', 'blockSize', '', []], ['double', 'C', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c3fd0>]' ; isconstructor='False' ; jname='adaptiveThreshold']
INFO:root:function: ['cv.pyrDown', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Size', 'dstsize', 'Size()', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c4250>]' ; isconstructor='False' ; jname='pyrDown']
INFO:root:function: ['cv.pyrUp', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Size', 'dstsize', 'Size()', []], ['int', 'borderType', 'BORDER_DEFAULT', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c43d0>]' ; isconstructor='False' ; jname='pyrUp']
INFO:root:function: ['cv.undistort', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Mat', 'cameraMatrix', '', []], ['Mat', 'distCoeffs', '', []], ['Mat', 'newCameraMatrix', 'Mat()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c4550>]' ; isconstructor='False' ; jname='undistort']
INFO:root:function: ['cv.initUndistortRectifyMap', 'void', [], [['Mat', 'cameraMatrix', '', []], ['Mat', 'distCoeffs', '', []], ['Mat', 'R', '', []], ['Mat', 'newCameraMatrix', '', []], ['Size', 'size', '', []], ['int', 'm1type', '', []], ['Mat', 'map1', '', ['/O']], ['Mat', 'map2', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c4710>]' ; isconstructor='False' ; jname='initUndistortRectifyMap']
INFO:root:function: ['cv.initWideAngleProjMap', 'float', [], [['Mat', 'cameraMatrix', '', []], ['Mat', 'distCoeffs', '', []], ['Size', 'imageSize', '', []], ['int', 'destImageWidth', '', []], ['int', 'm1type', '', []], ['Mat', 'map1', '', ['/O']], ['Mat', 'map2', '', ['/O']], ['int', 'projType', 'PROJ_SPHERICAL_EQRECT', []], ['double', 'alpha', '0', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c49d0>]' ; isconstructor='False' ; jname='initWideAngleProjMap']
INFO:root:function: ['cv.getDefaultNewCameraMatrix', 'Mat', [], [['Mat', 'cameraMatrix', '', []], ['Size', 'imgsize', 'Size()', []], ['bool', 'centerPrincipalPoint', 'false', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c4cd0>]' ; isconstructor='False' ; jname='getDefaultNewCameraMatrix']
INFO:root:function: ['cv.undistortPoints', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Mat', 'cameraMatrix', '', []], ['Mat', 'distCoeffs', '', []], ['Mat', 'R', 'Mat()', []], ['Mat', 'P', 'Mat()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c4e50>]' ; isconstructor='False' ; jname='undistortPoints']
INFO:root:function: ['cv.calcHist', 'void', [], [['vector_Mat', 'images', '', []], ['vector_int', 'channels', '', []], ['Mat', 'mask', '', []], ['Mat', 'hist', '', ['/O']], ['vector_int', 'histSize', '', []], ['vector_float', 'ranges', '', []], ['bool', 'accumulate', 'false', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c6090>]' ; isconstructor='False' ; jname='calcHist']
INFO:root:function: ['cv.calcBackProject', 'void', [], [['vector_Mat', 'images', '', []], ['vector_int', 'channels', '', []], ['Mat', 'hist', '', []], ['Mat', 'dst', '', ['/O']], ['vector_float', 'ranges', '', []], ['double', 'scale', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c62d0>]' ; isconstructor='False' ; jname='calcBackProject']
INFO:root:function: ['cv.compareHist', 'double', [], [['Mat', 'H1', '', []], ['Mat', 'H2', '', []], ['int', 'method', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c64d0>]' ; isconstructor='False' ; jname='compareHist']
INFO:root:function: ['cv.equalizeHist', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c6610>]' ; isconstructor='False' ; jname='equalizeHist']
INFO:root:function: ['cv.watershed', 'void', [], [['Mat', 'image', '', []], ['Mat', 'markers', '', ['/IO']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c6710>]' ; isconstructor='False' ; jname='watershed']
INFO:root:function: ['cv.pyrMeanShiftFiltering', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['double', 'sp', '', []], ['double', 'sr', '', []], ['int', 'maxLevel', '1', []], ['TermCriteria', 'termcrit', 'TermCriteria(TermCriteria::MAX_ITER+TermCriteria::EPS,5,1)', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c6810>]' ; isconstructor='False' ; jname='pyrMeanShiftFiltering']
INFO:root:function: ['cv.grabCut', 'void', [], [['Mat', 'img', '', []], ['Mat', 'mask', '', ['/IO']], ['Rect', 'rect', '', []], ['Mat', 'bgdModel', '', ['/IO']], ['Mat', 'fgdModel', '', ['/IO']], ['int', 'iterCount', '', []], ['int', 'mode', 'GC_EVAL', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c6a50>]' ; isconstructor='False' ; jname='grabCut']
INFO:root:function: ['cv.distanceTransform', 'void', ['=distanceTransformWithLabels'], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['Mat', 'labels', '', ['/O']], ['int', 'distanceType', '', []], ['int', 'maskSize', '', []], ['int', 'labelType', 'DIST_LABEL_CCOMP', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c6c90>]' ; isconstructor='False' ; jname='distanceTransformWithLabels']
INFO:root:function: ['cv.distanceTransform', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'distanceType', '', []], ['int', 'maskSize', '', []], ['int', 'dstType', 'CV_32F', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c6ed0>]' ; isconstructor='False' ; jname='distanceTransform']
INFO:root:function: ['cv.floodFill', 'int', [], [['Mat', 'image', '', ['/IO']], ['Mat', 'mask', '', ['/IO']], ['Point', 'seedPoint', '', []], ['Scalar', 'newVal', '', []], ['Rect*', 'rect', '0', ['/O']], ['Scalar', 'loDiff', 'Scalar()', []], ['Scalar', 'upDiff', 'Scalar()', []], ['int', 'flags', '4', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c50d0>]' ; isconstructor='False' ; jname='floodFill']
INFO:root:function: ['cv.cvtColor', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'code', '', []], ['int', 'dstCn', '0', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c5350>]' ; isconstructor='False' ; jname='cvtColor']
INFO:root:function: ['cv.demosaicing', 'void', [], [['Mat', '_src', '', []], ['Mat', '_dst', '', ['/O']], ['int', 'code', '', []], ['int', 'dcn', '0', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c54d0>]' ; isconstructor='False' ; jname='demosaicing']
INFO:root:function: ['cv.moments', 'Moments', [], [['Mat', 'array', '', []], ['bool', 'binaryImage', 'false', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c5650>]' ; isconstructor='False' ; jname='moments']
INFO:root:function: ['cv.HuMoments', 'void', [], [['Moments', 'm', '', []], ['Mat', 'hu', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c5750>]' ; isconstructor='False' ; jname='HuMoments']
INFO:root:function: ['cv.matchTemplate', 'void', [], [['Mat', 'image', '', []], ['Mat', 'templ', '', []], ['Mat', 'result', '', ['/O']], ['int', 'method', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c5850>]' ; isconstructor='False' ; jname='matchTemplate']
INFO:root:function: ['cv.connectedComponents', 'int', [], [['Mat', 'image', '', []], ['Mat', 'labels', '', ['/O']], ['int', 'connectivity', '8', []], ['int', 'ltype', 'CV_32S', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c59d0>]' ; isconstructor='False' ; jname='connectedComponents']
INFO:root:function: ['cv.connectedComponentsWithStats', 'int', [], [['Mat', 'image', '', []], ['Mat', 'labels', '', ['/O']], ['Mat', 'stats', '', ['/O']], ['Mat', 'centroids', '', ['/O']], ['int', 'connectivity', '8', []], ['int', 'ltype', 'CV_32S', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c5b50>]' ; isconstructor='False' ; jname='connectedComponentsWithStats']
INFO:root:function: ['cv.findContours', 'void', [], [['Mat', 'image', '', ['/IO']], ['vector_Mat', 'contours', '', ['/O']], ['Mat', 'hierarchy', '', ['/O']], ['int', 'mode', '', []], ['int', 'method', '', []], ['Point', 'offset', 'Point()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c5d50>]' ; isconstructor='False' ; jname='findContours']
INFO:root:function: ['cv.approxPolyDP', 'void', [], [['Mat', 'curve', '', []], ['Mat', 'approxCurve', '', ['/O']], ['double', 'epsilon', '', []], ['bool', 'closed', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c5f50>]' ; isconstructor='False' ; jname='approxPolyDP']
INFO:root:function: ['cv.arcLength', 'double', [], [['Mat', 'curve', '', []], ['bool', 'closed', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c8110>]' ; isconstructor='False' ; jname='arcLength']
INFO:root:function: ['cv.boundingRect', 'Rect', [], [['Mat', 'points', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c8210>]' ; isconstructor='False' ; jname='boundingRect']
INFO:root:function: ['cv.contourArea', 'double', [], [['Mat', 'contour', '', []], ['bool', 'oriented', 'false', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c82d0>]' ; isconstructor='False' ; jname='contourArea']
INFO:root:function: ['cv.minAreaRect', 'RotatedRect', [], [['Mat', 'points', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c83d0>]' ; isconstructor='False' ; jname='minAreaRect']
INFO:root:function: ['cv.boxPoints', 'void', [], [['RotatedRect', 'box', '', []], ['Mat', 'points', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c8490>]' ; isconstructor='False' ; jname='boxPoints']
INFO:root:function: ['cv.minEnclosingCircle', 'void', [], [['Mat', 'points', '', []], ['Point2f', 'center', '', ['/O']], ['float', 'radius', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c8590>]' ; isconstructor='False' ; jname='minEnclosingCircle']
INFO:root:function: ['cv.minEnclosingTriangle', 'double', [], [['Mat', 'points', '', []], ['Mat', 'triangle', '', ['/O', '/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c86d0>]' ; isconstructor='False' ; jname='minEnclosingTriangle']
INFO:root:function: ['cv.matchShapes', 'double', [], [['Mat', 'contour1', '', []], ['Mat', 'contour2', '', []], ['int', 'method', '', []], ['double', 'parameter', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c8810>]' ; isconstructor='False' ; jname='matchShapes']
INFO:root:function: ['cv.convexHull', 'void', [], [['Mat', 'points', '', []], ['Mat', 'hull', '', ['/O']], ['bool', 'clockwise', 'false', []], ['bool', 'returnPoints', 'true', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c8990>]' ; isconstructor='False' ; jname='convexHull']
INFO:root:function: ['cv.convexityDefects', 'void', [], [['Mat', 'contour', '', []], ['Mat', 'convexhull', '', []], ['Mat', 'convexityDefects', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c8b10>]' ; isconstructor='False' ; jname='convexityDefects']
INFO:root:function: ['cv.isContourConvex', 'bool', [], [['Mat', 'contour', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c8c50>]' ; isconstructor='False' ; jname='isContourConvex']
INFO:root:function: ['cv.intersectConvexConvex', 'float', [], [['Mat', '_p1', '', []], ['Mat', '_p2', '', []], ['Mat', '_p12', '', ['/O']], ['bool', 'handleNested', 'true', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c8d10>]' ; isconstructor='False' ; jname='intersectConvexConvex']
INFO:root:function: ['cv.fitEllipse', 'RotatedRect', [], [['Mat', 'points', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c8ed0>]' ; isconstructor='False' ; jname='fitEllipse']
INFO:root:function: ['cv.fitLine', 'void', [], [['Mat', 'points', '', []], ['Mat', 'line', '', ['/O']], ['int', 'distType', '', []], ['double', 'param', '', []], ['double', 'reps', '', []], ['double', 'aeps', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059c8f90>]' ; isconstructor='False' ; jname='fitLine']
INFO:root:function: ['cv.pointPolygonTest', 'double', [], [['Mat', 'contour', '', []], ['Point2f', 'pt', '', []], ['bool', 'measureDist', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059ca1d0>]' ; isconstructor='False' ; jname='pointPolygonTest']
INFO:root:function: ['cv.rotatedRectangleIntersection', 'int', [], [['RotatedRect', 'rect1', '', []], ['RotatedRect', 'rect2', '', []], ['Mat', 'intersectingRegion', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059ca310>]' ; isconstructor='False' ; jname='rotatedRectangleIntersection']
INFO:root:function: ['cv.createCLAHE', 'Ptr_CLAHE', [], [['double', 'clipLimit', '40.0', []], ['Size', 'tileGridSize', 'Size(8, 8)', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059ca450>]' ; isconstructor='False' ; jname='createCLAHE']
INFO:root:constant: ['const cv.COLORMAP_AUTUMN', '0', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLORMAP_AUTUMN' ; name='COLORMAP_AUTUMN' ; namespace='cv' ; value='0']
INFO:root:constant: ['const cv.COLORMAP_BONE', '1', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLORMAP_BONE' ; name='COLORMAP_BONE' ; namespace='cv' ; value='1']
INFO:root:constant: ['const cv.COLORMAP_JET', '2', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLORMAP_JET' ; name='COLORMAP_JET' ; namespace='cv' ; value='2']
INFO:root:constant: ['const cv.COLORMAP_WINTER', '3', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLORMAP_WINTER' ; name='COLORMAP_WINTER' ; namespace='cv' ; value='3']
INFO:root:constant: ['const cv.COLORMAP_RAINBOW', '4', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLORMAP_RAINBOW' ; name='COLORMAP_RAINBOW' ; namespace='cv' ; value='4']
INFO:root:constant: ['const cv.COLORMAP_OCEAN', '5', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLORMAP_OCEAN' ; name='COLORMAP_OCEAN' ; namespace='cv' ; value='5']
INFO:root:constant: ['const cv.COLORMAP_SUMMER', '6', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLORMAP_SUMMER' ; name='COLORMAP_SUMMER' ; namespace='cv' ; value='6']
INFO:root:constant: ['const cv.COLORMAP_SPRING', '7', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLORMAP_SPRING' ; name='COLORMAP_SPRING' ; namespace='cv' ; value='7']
INFO:root:constant: ['const cv.COLORMAP_COOL', '8', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLORMAP_COOL' ; name='COLORMAP_COOL' ; namespace='cv' ; value='8']
INFO:root:constant: ['const cv.COLORMAP_HSV', '9', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLORMAP_HSV' ; name='COLORMAP_HSV' ; namespace='cv' ; value='9']
INFO:root:constant: ['const cv.COLORMAP_PINK', '10', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLORMAP_PINK' ; name='COLORMAP_PINK' ; namespace='cv' ; value='10']
INFO:root:constant: ['const cv.COLORMAP_HOT', '11', [], []]
INFO:root:ok: ConstInfo [addedManually='False' ; classname='Imgproc' ; classpath='' ; cname='COLORMAP_HOT' ; name='COLORMAP_HOT' ; namespace='cv' ; value='11']
INFO:root:function: ['cv.applyColorMap', 'void', [], [['Mat', 'src', '', []], ['Mat', 'dst', '', ['/O']], ['int', 'colormap', '', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059ca8d0>]' ; isconstructor='False' ; jname='applyColorMap']
INFO:root:function: ['cv.line', 'void', [], [['Mat', 'img', '', ['/IO']], ['Point', 'pt1', '', []], ['Point', 'pt2', '', []], ['Scalar', 'color', '', []], ['int', 'thickness', '1', []], ['int', 'lineType', 'LINE_8', []], ['int', 'shift', '0', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059ca990>]' ; isconstructor='False' ; jname='line']
INFO:root:function: ['cv.arrowedLine', 'void', [], [['Mat', 'img', '', ['/IO']], ['Point', 'pt1', '', []], ['Point', 'pt2', '', []], ['Scalar', 'color', '', []], ['int', 'thickness', '1', []], ['int', 'line_type', '8', []], ['int', 'shift', '0', []], ['double', 'tipLength', '0.1', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059cabd0>]' ; isconstructor='False' ; jname='arrowedLine']
INFO:root:function: ['cv.rectangle', 'void', [], [['Mat', 'img', '', ['/IO']], ['Point', 'pt1', '', []], ['Point', 'pt2', '', []], ['Scalar', 'color', '', []], ['int', 'thickness', '1', []], ['int', 'lineType', 'LINE_8', []], ['int', 'shift', '0', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059cae50>]' ; isconstructor='False' ; jname='rectangle']
INFO:root:function: ['cv.circle', 'void', [], [['Mat', 'img', '', ['/IO']], ['Point', 'center', '', []], ['int', 'radius', '', []], ['Scalar', 'color', '', []], ['int', 'thickness', '1', []], ['int', 'lineType', 'LINE_8', []], ['int', 'shift', '0', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059b90d0>]' ; isconstructor='False' ; jname='circle']
INFO:root:function: ['cv.ellipse', 'void', [], [['Mat', 'img', '', ['/IO']], ['Point', 'center', '', []], ['Size', 'axes', '', []], ['double', 'angle', '', []], ['double', 'startAngle', '', []], ['double', 'endAngle', '', []], ['Scalar', 'color', '', []], ['int', 'thickness', '1', []], ['int', 'lineType', 'LINE_8', []], ['int', 'shift', '0', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059b9310>]' ; isconstructor='False' ; jname='ellipse']
INFO:root:function: ['cv.ellipse', 'void', [], [['Mat', 'img', '', ['/IO']], ['RotatedRect', 'box', '', []], ['Scalar', 'color', '', []], ['int', 'thickness', '1', []], ['int', 'lineType', 'LINE_8', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059b9610>]' ; isconstructor='False' ; jname='ellipse']
INFO:root:function: ['cv.fillConvexPoly', 'void', [], [['Mat', 'img', '', ['/IO']], ['Mat', 'points', '', []], ['Scalar', 'color', '', []], ['int', 'lineType', 'LINE_8', []], ['int', 'shift', '0', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059b9650>]' ; isconstructor='False' ; jname='fillConvexPoly']
INFO:root:function: ['cv.fillPoly', 'void', [], [['Mat', 'img', '', ['/IO']], ['vector_Mat', 'pts', '', []], ['Scalar', 'color', '', []], ['int', 'lineType', 'LINE_8', []], ['int', 'shift', '0', []], ['Point', 'offset', 'Point()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059b9950>]' ; isconstructor='False' ; jname='fillPoly']
INFO:root:function: ['cv.polylines', 'void', [], [['Mat', 'img', '', ['/IO']], ['vector_Mat', 'pts', '', []], ['bool', 'isClosed', '', []], ['Scalar', 'color', '', []], ['int', 'thickness', '1', []], ['int', 'lineType', 'LINE_8', []], ['int', 'shift', '0', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059b9b50>]' ; isconstructor='False' ; jname='polylines']
INFO:root:function: ['cv.drawContours', 'void', [], [['Mat', 'image', '', ['/IO']], ['vector_Mat', 'contours', '', []], ['int', 'contourIdx', '', []], ['Scalar', 'color', '', []], ['int', 'thickness', '1', []], ['int', 'lineType', 'LINE_8', []], ['Mat', 'hierarchy', 'Mat()', []], ['int', 'maxLevel', 'INT_MAX', []], ['Point', 'offset', 'Point()', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059b9d90>]' ; isconstructor='False' ; jname='drawContours']
INFO:root:function: ['cv.clipLine', 'bool', [], [['Rect', 'imgRect', '', []], ['Point', 'pt1', '', ['/O', '/IO']], ['Point', 'pt2', '', ['/O', '/IO']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059b5090>]' ; isconstructor='False' ; jname='clipLine']
INFO:root:function: ['cv.ellipse2Poly', 'void', [], [['Point', 'center', '', []], ['Size', 'axes', '', []], ['int', 'angle', '', []], ['int', 'arcStart', '', []], ['int', 'arcEnd', '', []], ['int', 'delta', '', []], ['vector_Point', 'pts', '', ['/O']]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059b51d0>]' ; isconstructor='False' ; jname='ellipse2Poly']
INFO:root:function: ['cv.putText', 'void', [], [['Mat', 'img', '', ['/IO']], ['String', 'text', '', []], ['Point', 'org', '', []], ['int', 'fontFace', '', []], ['double', 'fontScale', '', []], ['Scalar', 'color', '', []], ['int', 'thickness', '1', []], ['int', 'lineType', 'LINE_8', []], ['bool', 'bottomLeftOrigin', 'false', []]]]
INFO:root:ok: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059b5410>]' ; isconstructor='False' ; jname='putText']
INFO:root:function: ['cv.getTextSize', 'Size', [], [['String', 'text', '', []], ['int', 'fontFace', '', []], ['double', 'fontScale', '', []], ['int', 'thickness', '', []], ['int*', 'baseLine', '', ['/O']]]]
INFO:root:manual: FuncFamilyInfo [funcs='[<__main__.FuncInfo object at 0x1059b56d0>]' ; isconstructor='False' ; jname='getTextSize']
INFO:root:=== Header: /Users/swinston/Mirada/lib/c/opencv/modules/imgproc/include/opencv2/imgproc/imgproc.hpp
INFO:root:=== Namespaces: set(['', 'cv'])
