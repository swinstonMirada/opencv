PORTED FUNCs LIST (52 of 63):

 void CalibrateRobertson::setMaxIter(int max_iter)
 void CalibrateRobertson::setThreshold(float threshold)
 void TonemapMantiuk::setSaturation(float saturation)
 void TonemapMantiuk::setScale(float scale)
 void TonemapDurand::setContrast(float contrast)
 void TonemapDurand::setSaturation(float saturation)
 void TonemapDurand::setSigmaColor(float sigma_color)
 void TonemapDurand::setSigmaSpace(float sigma_space)
 void CalibrateDebevec::setLambda(float lambda)
 void CalibrateDebevec::setRandom(bool random)
 void CalibrateDebevec::setSamples(int samples)
 void TonemapReinhard::setColorAdaptation(float color_adapt)
 void TonemapReinhard::setIntensity(float intensity)
 void TonemapReinhard::setLightAdaptation(float light_adapt)
 void colorChange(Mat src, Mat mask, Mat& dst, float red_mul = 1.0f, float green_mul = 1.0f, float blue_mul = 1.0f)
 void decolor(Mat src, Mat& grayscale, Mat& color_boost)
 void detailEnhance(Mat src, Mat& dst, float sigma_s = 10, float sigma_r = 0.15f)
 void edgePreservingFilter(Mat src, Mat& dst, int flags = 1, float sigma_s = 60, float sigma_r = 0.4f)
 void fastNlMeansDenoising(Mat src, Mat& dst, float h = 3, int templateWindowSize = 7, int searchWindowSize = 21)
 void fastNlMeansDenoisingColored(Mat src, Mat& dst, float h = 3, float hColor = 3, int templateWindowSize = 7, int searchWindowSize = 21)
 void fastNlMeansDenoisingColoredMulti(vector_Mat srcImgs, Mat& dst, int imgToDenoiseIndex, int temporalWindowSize, float h = 3, float hColor = 3, int templateWindowSize = 7, int searchWindowSize = 21)
 void fastNlMeansDenoisingMulti(vector_Mat srcImgs, Mat& dst, int imgToDenoiseIndex, int temporalWindowSize, float h = 3, int templateWindowSize = 7, int searchWindowSize = 21)
 void illuminationChange(Mat src, Mat mask, Mat& dst, float alpha = 0.2f, float beta = 0.4f)
 void inpaint(Mat src, Mat inpaintMask, Mat& dst, double inpaintRadius, int flags)
 void pencilSketch(Mat src, Mat& dst1, Mat& dst2, float sigma_s = 60, float sigma_r = 0.07f, float shade_factor = 0.02f)
 void seamlessClone(Mat src, Mat dst, Mat mask, Point p, Mat& blend, int flags)
 void stylization(Mat src, Mat& dst, float sigma_s = 60, float sigma_r = 0.45f)
 void textureFlattening(Mat src, Mat mask, Mat& dst, double low_threshold = 30, double high_threshold = 45, int kernel_size = 3)
 void AlignExposures::process(vector_Mat src, vector_Mat dst, Mat times, Mat response)
 void CalibrateCRF::process(vector_Mat src, Mat& dst, Mat times)
 void TonemapDrago::setBias(float bias)
 void TonemapDrago::setSaturation(float saturation)
 Point AlignMTB::calculateShift(Mat img0, Mat img1)
 void AlignMTB::computeBitmaps(Mat img, Mat& tb, Mat& eb)
 void AlignMTB::process(vector_Mat src, vector_Mat dst, Mat times, Mat response)
 void AlignMTB::process(vector_Mat src, vector_Mat dst)
 void AlignMTB::setCut(bool value)
 void AlignMTB::setExcludeRange(int exclude_range)
 void AlignMTB::setMaxBits(int max_bits)
 void AlignMTB::shiftMat(Mat src, Mat& dst, Point shift)
 void MergeDebevec::process(vector_Mat src, Mat& dst, Mat times, Mat response)
 void MergeDebevec::process(vector_Mat src, Mat& dst, Mat times)
 void MergeMertens::process(vector_Mat src, Mat& dst, Mat times, Mat response)
 void MergeMertens::process(vector_Mat src, Mat& dst)
 void MergeMertens::setContrastWeight(float contrast_weiht)
 void MergeMertens::setExposureWeight(float exposure_weight)
 void MergeMertens::setSaturationWeight(float saturation_weight)
 void MergeExposures::process(vector_Mat src, Mat& dst, Mat times, Mat response)
 void MergeRobertson::process(vector_Mat src, Mat& dst, Mat times, Mat response)
 void MergeRobertson::process(vector_Mat src, Mat& dst, Mat times)
 void Tonemap::process(Mat src, Mat& dst)
 void Tonemap::setGamma(float gamma)

SKIPPED FUNCs LIST (11 of 63):

 Ptr_AlignMTB createAlignMTB(int max_bits = 6, int exclude_range = 4, bool cut = true)
// Return type 'Ptr_AlignMTB' is not supported, skipping the function

 Ptr_CalibrateDebevec createCalibrateDebevec(int samples = 70, float lambda = 10.0f, bool random = false)
// Return type 'Ptr_CalibrateDebevec' is not supported, skipping the function

 Ptr_CalibrateRobertson createCalibrateRobertson(int max_iter = 30, float threshold = 0.01f)
// Return type 'Ptr_CalibrateRobertson' is not supported, skipping the function

 Ptr_MergeDebevec createMergeDebevec()
// Return type 'Ptr_MergeDebevec' is not supported, skipping the function

 Ptr_MergeMertens createMergeMertens(float contrast_weight = 1.0f, float saturation_weight = 1.0f, float exposure_weight = 0.0f)
// Return type 'Ptr_MergeMertens' is not supported, skipping the function

 Ptr_MergeRobertson createMergeRobertson()
// Return type 'Ptr_MergeRobertson' is not supported, skipping the function

 Ptr_Tonemap createTonemap(float gamma = 1.0f)
// Return type 'Ptr_Tonemap' is not supported, skipping the function

 Ptr_TonemapDrago createTonemapDrago(float gamma = 1.0f, float saturation = 1.0f, float bias = 0.85f)
// Return type 'Ptr_TonemapDrago' is not supported, skipping the function

 Ptr_TonemapDurand createTonemapDurand(float gamma = 1.0f, float contrast = 4.0f, float saturation = 1.0f, float sigma_space = 2.0f, float sigma_color = 2.0f)
// Return type 'Ptr_TonemapDurand' is not supported, skipping the function

 Ptr_TonemapMantiuk createTonemapMantiuk(float gamma = 1.0f, float scale = 0.7f, float saturation = 1.0f)
// Return type 'Ptr_TonemapMantiuk' is not supported, skipping the function

 Ptr_TonemapReinhard createTonemapReinhard(float gamma = 1.0f, float intensity = 0.0f, float light_adapt = 1.0f, float color_adapt = 0.0f)
// Return type 'Ptr_TonemapReinhard' is not supported, skipping the function


0 def args - 43 funcs
1 def args - 1 funcs
2 def args - 4 funcs
3 def args - 11 funcs
4 def args - 3 funcs
5 def args - 1 funcs

class as MAP:
	

class SIMPLE:
	